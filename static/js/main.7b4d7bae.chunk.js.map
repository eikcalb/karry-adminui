{"version":3,"sources":["loading_icon.gif","components/toolbar.tsx","lib/user.ts","lib/util.ts","lib/index.ts","lib/config.ts","lib/theme.ts","components/logout.tsx","components/guard.tsx","view/login.tsx","view/register.tsx","components/modal.tsx","components/misc.tsx","lib/stat.ts","view/dashboard.tsx","components/users.tsx","view/users.tsx","lib/post.ts","components/post.tsx","view/posts.tsx","view/reports.tsx","components/body.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","timer","User","data","id","firstName","lastName","role","email","profileImageURL","token","phone","country","createdAt","this","app","page","pageLimit","initiateNetworkRequest","method","referrerPolicy","headers","user","response","ok","Error","json","error","userID","body","JSON","stringify","message","postID","links","storageKeys","DEFAULT_APPLICATION","config","ready","name","version","logoutListener","Promise","res","rej","a","init","inflateUser","console","log","localforage","driver","storeName","description","path","request","mode","fetch","hostname","resp","status","reauthenticate","logout","refToken","jsonResponse","refreshToken","session","username","password","validateLogin","persistUser","trim","validator","isEmail","matches","validateRegister","passwordVerify","undefined","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","signedIn","setSignedInUser","setLoading","STYLES","toolbar","boxShadow","Toolbar","hidden","useState","showMenu","state","setState","ctx","useContext","vctx","className","style","aria-label","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","to","activeClassName","Logout","viewCTX","useEffect","loading","pathname","AuthGuard","children","rest","location","useLocation","from","AuthHandler","useHistory","Login","showPassword","addToast","useToasts","onUsernameChange","useCallback","e","target","value","onPasswordChange","onSubmit","preventDefault","stopPropagation","login","appearance","toggleShowPassword","flex","disabled","required","onChange","placeholder","type","Register","Modal","active","isCard","onDismiss","AddAdmin","creatorPassword","showVerifyPassword","showCreatorPassword","onFirstNameChange","onLastNameChange","onVerifyPasswordChange","onCreatorPasswordChange","addAdmin","toggleShowVerifyPassword","toggleShowCreatorPassword","EmptyComponent","icon","shadow","Stat","numberFormatter","Intl","NumberFormat","ItemCount","format","Dashboard","showAdminModal","loadingStat","users","teams","ads","posts","getCount","then","catch","UserDetails","userProp","onCancel","showEdit","onEmailChange","onCountryChange","onPhoneChange","update","updateUser","onDelete","window","confirm","deleteUser","moment","margin","height","src","fromNow","Item","textOverflow","whiteSpace","Users","loadingMore","Array","selectedUser","onLoadMore","getAllUsers","Math","max","ceil","length","map","item","key","computeCount","v","base","floor","abs","suffix","min","indexOf","precision","pow","round","Post","title","mediaURL","thumbnailURL","viewCount","uploadTime","owner","like","dislike","reportsCount","PostDetails","postProp","post","show","warning","setWarning","onTitleChange","onSubmitUpdate","updatePost","updated","deletePost","onWarnUser","warnUser","unix","onBack","controls","justifyContent","Warning","setMessage","minLength","rows","Posts","selectedPost","getAllPosts","report","person","content","Reports","reports","useParams","getReports","Loading","filter","LoadingIcon","BodyFragment","Body","showLoading","App","viewContext","finally","autoDismiss","autoDismissTimeout","placement","Provider","Boolean","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,0C,mJCYvCC,E,yGCRSC,EAAb,WAYI,WAAYC,GAAO,yBAXnBC,QAWkB,OAVlBC,eAUkB,OATlBC,cASkB,OARlBC,UAQkB,OAPlBC,WAOkB,OANlBC,qBAMkB,OALlBC,WAKkB,OAJlBC,WAIkB,OAHlBC,aAGkB,OAFlBC,eAEkB,EACdC,KAAKV,GAAKD,EAAKC,GACfU,KAAKP,KAAOJ,EAAKI,KACjBO,KAAKT,UAAYF,EAAKE,UACtBS,KAAKR,SAAWH,EAAKG,SACrBQ,KAAKN,MAAQL,EAAKK,MAClBM,KAAKJ,MAAQP,EAAKO,MAlB1B,sGAqB6BK,GArB7B,gGAqB+CC,EArB/C,+BAqBsD,EAAGC,EArBzD,+BAFgC,GAEhC,kBAuBmCF,EAAIG,uBAAJ,wCAA4DF,EAA5D,sBAA8EC,GAAa,CAC9GE,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UA5BnD,WAuBkBa,EAvBlB,QA+B0BC,GA/B1B,6BAgC0BC,MAhC1B,UAgCuCF,EAASG,OAhChD,0BAgCwDC,MAhCxD,wCAmCyBJ,EAASG,OAnClC,iRAyC4BX,EAAkBa,EAAgBzB,GAzC9D,kGA2CmCY,EAAIG,uBAAJ,iCAAqDU,GAAU,CAClFT,OAAQ,QACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,OAC/B,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU5B,KAnDrC,WA2CkBoB,EA3ClB,QAqD0BC,GArD1B,6BAsD0BC,MAtD1B,SAsDuCF,EAASG,OAtDhD,yBAsDwDC,MAtDxD,wCAyDyBJ,EAASG,OAzDlC,qRA+D4BX,EAAkBa,GA/D9C,kGAiEmCb,EAAIG,uBAAJ,iCAAqDU,GAAU,CAClFT,OAAQ,SACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UAtEnD,WAiEkBa,EAjElB,QAyE0BC,GAzE1B,6BA0E0BC,MA1E1B,SA0EuCF,EAASG,OA1EhD,yBA0EwDC,MA1ExD,wCA6EyBJ,EAASG,OA7ElC,iRAoF0BX,EAAkBa,EAAQI,EAASC,GApF7D,kGAsFmClB,EAAIG,uBAAJ,sCAA0DU,GAAU,CACvFT,OAAQ,OACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,QAEnCmB,KAAMC,KAAKC,UAAU,CAAEC,UAASC,aA9FhD,WAsFkBV,EAtFlB,QAgG0BC,GAhG1B,6BAiG0BC,MAjG1B,SAiGuCF,EAASG,OAjGhD,yBAiGwDC,MAjGxD,wCAoGyBJ,EAASG,OApGlC,oN,yBCJaQ,EAED,UAFCA,EAGF,SAHEA,EAIF,SAJEA,EAKE,aALFA,EAMF,SANEA,EAOC,YAPDA,EAQH,IARGA,EASA,qBATAA,EAUC,kBAIDC,EACK,mBADLA,EAEM,oBC6ONC,EAAsB,IAtPnC,WAUI,WAAYC,GAAS,IAAD,gCATpBC,WASoB,OARpBC,KAAO,cAQa,KAPpBC,QAAU,MAOU,KALVH,YAKU,OAJbf,UAIa,OAFpBmB,oBAEoB,EAChB3B,KAAKuB,OAASA,EACdvB,KAAKwB,MAAQ,IAAII,QAAJ,uCAAY,WAAOC,EAAKC,GAAZ,SAAAC,EAAA,+EAGX,EAAKC,OAHM,gCAOP,EAAKC,cAPE,uDASbC,QAAQC,IAAR,MATa,QAWjBN,GAAI,GAXa,kDAajBK,QAAQC,IAAR,MACAL,EAAI,EAAD,IAdc,gEAAZ,yDAZrB,oKAiCQM,SAAmB,CACfC,OAAQ,CACJD,YACAA,eACAA,UAEJX,KAAK,GAAD,OAAKzB,KAAKyB,KAAV,aAAmBzB,KAAK0B,SAC5BA,QAAS,EACTY,UAAW,aACXC,YAAa,KA1CzB,SA4CcH,UA5Cd,4LA+CiCI,EAAcC,GA/C/C,kFAgDQA,EAAO,2BACAA,GADA,IAEHC,KAAM,SAlDlB,SAoD2BC,MAAM,GAAD,OAAI3C,KAAKuB,OAAOqB,UAAhB,OAA2BJ,GAAQC,GApDnE,UAqD4B,OADdI,EApDd,QAqDiBC,OArDjB,oBAsDiB9C,KAAKQ,KAtDtB,sBAuDsB,IAAIG,MAAM,uCAvDhC,iCA6DwCX,KAAK+C,iBA7D7C,wBA6DwBnD,EA7DxB,EA6DwBA,MACRI,KAAKQ,KAAKZ,MAAQA,EAEd6C,GAAWA,EAAQlC,SAAWkC,EAAQlC,QAAQ,oBAC9CkC,EAAQlC,QAAQ,kBAAoBX,GAjExD,UAmE6BI,KAAKI,uBAAuBoC,EAAMC,GAnE/D,4FAqEsBzC,KAAKgD,SArE3B,cAsEsB,MAAK,IAAIrC,MAAM,2CAtErC,iCAyEekC,GAzEf,uSA8EmCT,UAAoBf,GA9EvD,UA8EkB4B,EA9ElB,6BAgFsB,IAAItC,MAAM,uDAhFhC,uBAkFmCX,KAAKI,uBAAuB,yBAA0B,CACzEC,OAAQ,OACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdQ,KAAMC,KAAKC,UAAU,CAAErB,MAAOqD,MAzF9C,WAkFkBxC,EAlFlB,QA4F0BC,GA5F1B,6BA6F0BC,MA7F1B,UA6FuCF,EAASG,OA7FhD,0BA6FwDC,MA7FxD,wCAgGuCJ,EAASG,OAhGhD,eAgGkBsC,EAhGlB,iBAiGkBd,UAAoBf,EAA2B6B,EAAaC,cAjG9E,sBAkGmBD,EAAaC,aAlGhC,kBAmGmBD,GAnGnB,wCAqGYhB,QAAQC,IAAR,MArGZ,yRA4GyCC,UAAoBf,GA5G7D,UA4GY+B,EA5GZ,6BA6G4B,IAAIzC,MAAM,kCA7GtC,cA+GQX,KAAKQ,KAAO,IAAIpB,EAAKgE,GA/G7B,kBAgHepD,KAAKQ,MAhHpB,uPAoHaR,KAAKQ,KApHlB,sBAqHkB,IAAIG,MAAM,oBArH5B,uBAwHcyB,UAAoBf,EAA0BrB,KAAKQ,MAxHjE,uIA4HQ,OAAOR,KAAKQ,OA5HpB,qEA+HgB6C,EAAUC,GA/H1B,kGAiIkBtD,KAAKuD,cAAcF,EAAUC,GAjI/C,uBAmImCtD,KAAKI,uBAAuB,uBAAwB,CACvEC,OAAQ,OACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdQ,KAAMC,KAAKC,UAAU,CAAEvB,MAAO2D,EAAUC,eA1IxD,WAmIkB7C,EAnIlB,QA4I0BC,GA5I1B,6BA6I0BC,MA7I1B,UA6IuCF,EAASG,OA7IhD,0BA6IwDC,MA7IxD,wCAgJuCJ,EAASG,OAhJhD,eAgJkBsC,EAhJlB,iBAiJkBd,UAAoBf,EAA2B6B,EAAaC,cAjJ9E,sBAkJmBD,EAAaC,aACpBnD,KAAKQ,KAAO,IAAIpB,EAAK8D,GAnJjC,UAoJkBlD,KAAKwD,cApJvB,iCAsJmBxD,KAAKQ,MAtJxB,6OA6JkC6C,EAAkBC,GA7JpD,oEA8JaD,GAAaC,EA9J1B,sBA+JkB,IAAI3C,MAAM,6BA/J5B,WAiKQ0C,EAAWA,EAASI,SAEFC,IAAUC,QAAQN,GAnK5C,sBAoKkB,IAAI1C,MAAM,8BApK5B,UAsKa+C,IAAUE,QAAQN,EAAU,oBAtKzC,sBAuKkB,IAAI3C,MAAM,yFAvK5B,4KA4KmBtB,GA5KnB,sGA8KkBW,KAAK6D,iBAAiBxE,GA9KxC,uBAgLmCW,KAAKI,uBAAuB,qBAAsB,CACrEC,OAAQ,OACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBP,KAAKQ,YAA1B,aAAqB,EAAWZ,QAEpCmB,KAAMC,KAAKC,UAAU5B,KAxLrC,WAgLkBoB,EAhLlB,QA0L0BC,GA1L1B,6BA2L0BC,MA3L1B,UA2LuCF,EAASG,OA3LhD,0BA2LwDC,MA3LxD,wCA8LuCJ,EAASG,OA9LhD,eA8LkBsC,EA9LlB,OA+LkB1C,EAAO,IAAIpB,EAAK8D,GA/LlC,kBAiMmB1C,GAjMnB,8OAwMqCnB,GAxMrC,kFAyMcK,EAAyDL,EAAzDK,MAAO4D,EAAkDjE,EAAlDiE,SAAU/D,EAAwCF,EAAxCE,UAAWC,EAA6BH,EAA7BG,SAAUsE,EAAmBzE,EAAnByE,eACvCpE,GAAU4D,EA1MvB,sBA2MkB,IAAI3C,MAAM,6BA3M5B,UA6MY2C,IAAaQ,EA7MzB,sBA8MkB,IAAInD,MAAM,2BA9M5B,UAgNQjB,EAAQA,EAAM+D,OACdlE,EAAYA,EAAUkE,OACtBjE,EAAWA,EAASiE,OACflE,GAAcC,EAnN3B,uBAoNkB,IAAImB,MAAM,4CApN5B,WAsNajB,GAAUgE,IAAUC,QAAQjE,GAtNzC,uBAuNkB,IAAIiB,MAAM,8BAvN5B,WAyNa+C,IAAUE,QAAQN,EAAU,oBAzNzC,uBA0NkB,IAAI3C,MAAM,yFA1N5B,4OA+NQX,KAAKQ,UAAOuD,EACZ3B,aAAuBf,GACvBe,aAAuBf,GACnBrB,KAAK2B,gBACL3B,KAAK2B,iBAnOjB,6GAsPmC,CCxPI,CACnCiB,SAAU,gDDqQDoB,EAAsBC,wBAA2B3C,GAMjD4C,EAAeD,wBAIzB,CACCE,cAAUJ,EACVK,gBAAiB,aACjBC,WAAY,eEtRHC,EAAiD,CAC1DC,QAAS,CACLC,UAAW,2B,uBLWJ,SAASC,EAAT,GAAsC,IAAD,MAAlBC,cAAkB,WACtBC,mBAAS,CAAEC,UAAU,IADC,mBACzCC,EADyC,KAClCC,EADkC,KAE1CC,EAAMC,qBAAWhB,GACjBiB,EAAOD,qBAAWd,GAExB,OACI,yBAAKgB,UAAS,iBAAYR,EAAS,YAAc,IAAMjF,KAAK,aAAa0F,MAAOb,EAAOC,SACnF,yBAAKW,UAAU,gBACX,yBAAKA,UAAU,6EACVH,EAAItD,MAET,yBAAKhC,KAAK,SAASyF,UAAS,+BAA0BL,EAAMD,SAAW,YAAc,IAAMQ,aAAW,OAAOC,gBAAc,QAAQC,cAAY,qBAAqBC,QAAS,WAEzKC,aAAarG,GACT0F,EAAMD,SACNE,EAAS,2BAAKD,GAAN,IAAaD,UAAU,MAE/BE,EAAS,2BAAKD,GAAN,IAAaD,UAAU,KAC/BzF,EAAQsG,YAAW,WACfX,EAAS,2BAAKD,GAAN,IAAaD,UAAU,OAvBlC,QA2BL,0BAAMc,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAG1B,yBAAKR,UAAS,sBAAiBL,EAAMD,SAAW,YAAc,KACzDG,EAAIZ,YAAcc,EAAKd,SACpB,oCACI,yBAAKe,UAAU,gBACX,kBAAC,IAAD,CAASA,UAAU,kCAAkCS,OAAK,EAACC,GAAIxE,EAAiByE,gBAAgB,aAAhG,aACA,kBAAC,IAAD,CAASX,UAAU,kCAAkCU,GAAIxE,EAAayE,gBAAgB,aAAtF,SACA,kBAAC,IAAD,CAASX,UAAU,kCAAkCU,GAAIxE,EAAayE,gBAAgB,aAAtF,UAEJ,yBAAKX,UAAU,cACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,gCACX,kBAAC,IAAD,MADJ,kBAC4BH,EAAIvE,YADhC,aAC4B,EAAUjB,WAEtC,yBAAK2F,UAAU,4BAKX,kBAAC,IAAD,CAAMA,UAAU,+BAA+BU,GAAIxE,GAAc,kBAAC,IAAD,MAAjE,mBAMZ,yBAAK8D,UAAU,cACX,yBAAKA,UAAU,+CACX,kBAAC,IAAD,CAAMU,GAAIxE,EAAa8D,UAAU,kDAC7B,kBAAC,IAAD,MADJ,eAGA,kBAAC,IAAD,CAAMU,GAAIxE,EAAgB8D,UAAU,yCAChC,kBAAC,IAAD,MADJ,kB,8BM9DzB,SAASY,IACZ,IAAMf,EAAMC,qBAAWhB,GACjB+B,EAAUf,qBAAWd,GAM3B,OAJA8B,qBAAU,WACNjB,EAAI/B,WACL,IAEE+C,EAAQ5B,UAOT4B,EAAQ5B,SAAW,kBAAC,GAAD,CAAc8B,SAAO,IANjC,kBAAC,IAAD,CAAUL,GAAI,CAAEM,SAAU,O,aCdlC,SAASC,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,SAAaC,EAAoB,4BACnDtB,EAAMC,qBAAWhB,GACjB+B,EAAUf,qBAAWd,GACrBoC,EAAWC,cAEjB,OACI,kBAAC,IAAUF,EACNtB,EAAIZ,YAAc4B,EAAQ5B,SACvBiC,EAEI,kBAAC,IAAD,CAAUR,GAAI,CACVM,SAAU9E,EACVyD,MAAO,CACH2B,KAAMF,OAS3B,SAASG,EAAT,GAAoC,IAAbL,EAAY,EAAZA,SACpBrB,EAAMC,qBAAWhB,GACjB+B,EAAUf,qBAAWd,GACrBoC,EAAWC,cACHG,cAId,GAAI3B,EAAIZ,YAAc4B,EAAQ5B,SAAU,CAAC,IAC7BqC,GAAUF,EAASzB,OAAiB,CAAE2B,KAAM,CAAEN,SAAU,OAAxDM,KACR,OAAO,kBAAC,IAAD,CAAUZ,GAAIY,IAErB,OAAOJ,E,YC7BR,SAASO,IACZ,IAAM5B,EAAMC,qBAAWhB,GACjB+B,EAAUf,qBAAWd,GAFP,EAGMS,mBAAS,CAC/BiC,cAAc,EACdvD,SAAU,GACVC,SAAU,GACV2C,SAAS,IAPO,mBAGbpB,EAHa,KAGNC,EAHM,KASZ+B,EAAaC,sBAAbD,SAEFE,EAAmBC,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAaxB,SAAU4D,EAAEC,OAAOC,WACzC,CAACtC,IAEEuC,EAAmBJ,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAavB,SAAU2D,EAAEC,OAAOC,WACzC,CAACtC,IAEEwC,EAAWL,sBAAW,uCAAC,WAAOC,GAAP,eAAAlF,EAAA,6DACzBkF,EAAEK,iBACFL,EAAEM,kBAFuB,SAKrBzC,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KALT,SAMFlB,EAAIyC,MAAM3C,EAAMxB,SAAUwB,EAAMvB,UAN9B,OAMf9C,EANe,OAQrBuF,EAAQ3B,gBAAgB5D,GACxBsE,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,oBAAqB,CAC1BY,WAAY,YAXK,kDAcrB3C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,mBAAoB,CACtCuG,WAAY,UAhBK,0DAAD,sDAmBzB,CAAC5C,IAEE6C,EAAqBV,uBAAY,WACnClC,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB+B,cAAe/B,EAAM+B,oBACvD,CAAC/B,IAEJ,OACI,kBAAC4B,EAAD,KACI,kBAAC,GAAD,KACI,yBAAKvB,UAAU,sGACX,yBAAKA,UAAU,uEAAuEC,MAAO,CAAEwC,KAAM,IACjG,yBAAKzC,UAAU,oCACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAcA,UAAU,cACxB,0BAAMA,UAAU,YAAYmC,SAAUA,GAClC,yBAAKnC,UAAU,SACX,uBAAGA,UAAU,0BAAb,gCACA,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAACV,MAAOtC,EAAMxB,SAAUyE,SAAUf,EAAkBgB,YAAY,yBAAyB7C,UAAU,QAAQ8C,KAAK,SACxJ,0BAAM9C,UAAU,yBAAwB,kBAAC,IAAD,SAGhD,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAACV,MAAOtC,EAAMvB,SAAUwE,SAAUV,EAAkBW,YAAY,yBAAyB7C,UAAU,QAAQ8C,KAAMnD,EAAM+B,aAAe,OAAS,aACvL,0BAAM1B,UAAU,yBAAwB,kBAAC,IAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAAS8C,KAAK,SAASzC,QAASmC,GAAqB7C,EAAM+B,aAAe,kBAAC,IAAD,MAAiB,kBAAC,IAAD,SAIrH,4BAAQgB,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,oCAA+BL,EAAMoB,QAAU,aAAe,KAClH,kBAAC,IAAD,MADJ,wBCxErC,SAASgC,IAEIjD,qBAAWd,GAE3B,OACI,kBAACuC,EAAD,KACI,kBAAC,GAAD,KACI,yBAAKvB,UAAU,wGACX,yBAAKA,UAAU,uEAAuEC,MAAO,CAAEwC,KAAM,IACjG,yBAAKzC,UAAU,oCACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAqBA,UAAU,8BAC/B,uBAAGA,UAAU,aAAb,uBACA,uBAAGA,UAAU,8CAAb,oDACA,uBAAGA,UAAU,8CAAb,2DACA,kBAAC,IAAD,CAAMU,GAAIxE,EAAa8D,UAAU,6BAC7B,kBAAC,IAAD,MADJ,uBCzBjC,SAASgD,EAAT,GAAqF,IAAD,IAAnEC,cAAmE,SAAnD/B,EAAmD,EAAnDA,SAAmD,IAAzCgC,cAAyC,aAAzBC,iBAAyB,MAAb,aAAa,EAEvF,OACI,yBAAKnD,UAAS,gBAAWiD,EAAS,YAAc,KAC5C,yBAAKjD,UAAU,qBACf,yBAAKA,UAAU,iBAAiBkB,GAC/BgC,EAAS,KAAO,4BAAQ7C,QAAS8C,EAAWnD,UAAU,uBAAuBE,aAAW,WCH9F,SAASkD,IACZ,IAAMvD,EAAMC,qBAAWhB,GADA,EAGGW,mBAAS,CAC/BsB,SAAS,EACT3C,SAAU,GACVQ,eAAgB,GAChBT,SAAU,GACV9D,UAAW,GACXC,SAAU,GACV+I,gBAAiB,GACjB3B,cAAc,EACd4B,oBAAoB,EACpBC,qBAAqB,IAbF,mBAGhB5D,EAHgB,KAGTC,EAHS,KAgBf+B,EAAaC,sBAAbD,SAEF6B,EAAoB1B,uBAAY,SAACC,GACnCnC,EAAS,2BAAKD,GAAN,IAAatF,UAAW0H,EAAEC,OAAOC,WAC1C,CAACtC,IAEE8D,EAAmB3B,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAarF,SAAUyH,EAAEC,OAAOC,WACzC,CAACtC,IAEEkC,EAAmBC,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAaxB,SAAU4D,EAAEC,OAAOC,WACzC,CAACtC,IAEEuC,EAAmBJ,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAavB,SAAU2D,EAAEC,OAAOC,WACzC,CAACtC,IAEE+D,EAAyB5B,uBAAY,SAACC,GACxCnC,EAAS,2BAAKD,GAAN,IAAaf,eAAgBmD,EAAEC,OAAOC,WAC/C,CAACtC,IAEEgE,EAA0B7B,uBAAY,SAACC,GACzCnC,EAAS,2BAAKD,GAAN,IAAa0D,gBAAiBtB,EAAEC,OAAOC,WAChD,CAACtC,IAGEwC,EAAWL,sBAAW,uCAAC,WAAOC,GAAP,2BAAAlF,EAAA,6DACzBkF,EAAEK,iBACFL,EAAEM,kBAFuB,SAKrBzC,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KACtB5C,EAA6EwB,EAA7ExB,SAAUC,EAAmEuB,EAAnEvB,SAAUQ,EAAyDe,EAAzDf,eAAgBvE,EAAyCsF,EAAzCtF,UAAWC,EAA8BqF,EAA9BrF,SAAU+I,EAAoB1D,EAApB0D,gBAN5C,SAOFxD,EAAI+D,SAAS,CAC5BpJ,MAAO2D,EACP9D,YACAC,WACA8D,WACAQ,iBACAyE,oBAbiB,OAOf/H,EAPe,OAerB0B,QAAQC,IAAI3B,EAAM,kBAClBsE,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,8BAA+B,CACpCY,WAAY,YAlBK,kDAqBrB3C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,0BAA2B,CAC7CuG,WAAY,UAvBK,0DAAD,sDA0BzB,CAAC5C,IAEE6C,EAAqBV,uBAAY,WACnClC,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB+B,cAAe/B,EAAM+B,oBACvD,CAAC/B,IACEkE,EAA2B/B,uBAAY,WACzClC,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB2D,oBAAqB3D,EAAM2D,0BAC7D,CAAC3D,IACEmE,EAA4BhC,uBAAY,WAC1ClC,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB4D,qBAAsB5D,EAAM4D,2BAC9D,CAAC5D,IAEJ,OACI,0BAAMK,UAAU,kBAAkBmC,SAAUA,GACxC,yBAAKnC,UAAU,gBACX,kBAAC,IAAD,CAAiBA,UAAU,mBAC3B,uBAAGA,UAAU,+CAAb,2BAEA,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUY,EAAmBvB,MAAOtC,EAAMtF,UAAWyI,KAAK,OAAOD,YAAY,uBACxI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,SAIZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUa,EAAkBxB,MAAOtC,EAAMrF,SAAUwI,KAAK,OAAOD,YAAY,sBACtI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,WAOpB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUf,EAAkBI,MAAOtC,EAAMxB,SAAU2E,KAAK,OAAOD,YAAY,sBACtI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,SAKZ,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO0C,SAAU/C,EAAMoB,QAAS6B,SAAUV,EAAkBS,UAAQ,EAACV,MAAOtC,EAAMvB,SAAUyE,YAAY,uBAAuB7C,UAAU,QAAQ8C,KAAMnD,EAAM+B,aAAe,OAAS,aACrL,0BAAM1B,UAAU,yBAAwB,kBAAC,IAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAAS8C,KAAK,SAASzC,QAASmC,GAAqB7C,EAAM+B,aAAe,kBAAC,IAAD,MAAiB,kBAAC,IAAD,SAKrH,yBAAK1B,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO0C,SAAU/C,EAAMoB,QAAS6B,SAAUc,EAAwBf,UAAQ,EAACV,MAAOtC,EAAMf,eAAgBiE,YAAY,kBAAkB7C,UAAU,QAAQ8C,KAAMnD,EAAM2D,mBAAqB,OAAS,aAClM,0BAAMtD,UAAU,yBAAwB,kBAAC,IAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAAS8C,KAAK,SAASzC,QAASwD,GAA2BlE,EAAM2D,mBAAqB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,WAOzI,uBAAGtD,UAAU,yDAAb,wCACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO0C,SAAU/C,EAAMoB,QAAS6B,SAAUe,EAAyBhB,UAAQ,EAACV,MAAOtC,EAAM0D,gBAAiBR,YAAY,yBAAyB7C,UAAU,QAAQ8C,KAAMnD,EAAM4D,oBAAsB,OAAS,aAC5M,0BAAMvD,UAAU,yBAAwB,kBAAC,IAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAAS8C,KAAK,SAASzC,QAASyD,GAA4BnE,EAAM4D,oBAAsB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,SAKnI,4BAAQb,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,yCAAoCL,EAAMoB,QAAU,aAAe,KACvH,kBAAC,IAAD,MADJ,6BAST,SAASgD,EAAT,GAA8G,IAAD,IAAnFC,YAAmF,MAA5E,kBAAC,IAAD,MAA4E,MAAjDhI,eAAiD,MAAvC,qBAAuC,MAAjBiI,cAAiB,SAChH,OACI,yBAAKjE,UAAS,0BAAqBiE,EAAS,GAAK,kBAC7C,yBAAKjE,UAAU,gBACX,0BAAMA,UAAU,mCAAmCgE,GACnD,uBAAGhE,UAAU,+CAA+ChE,KC3KrE,IAAMkI,EAAb,+IAC0BnJ,GAD1B,kGAGmCA,EAAIG,uBAAuB,uBAAwB,CACtEC,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UARnD,WAGkBa,EAHlB,QAW0BC,GAX1B,6BAY0BC,MAZ1B,SAYuCF,EAASG,OAZhD,yBAYwDC,MAZxD,wCAeyBJ,EAASG,OAflC,8MCOMyI,EAAkBC,KAAKC,eAE7B,SAASC,EAAT,GAAsD,IAAjC/H,EAAgC,EAAhCA,KAAM0F,EAA0B,EAA1BA,MAA0B,IAAnBlB,eAAmB,SACjD,OACI,yBAAKf,UAAU,gCACX,6BACI,uBAAGA,UAAU,WAAWzD,GACvBwE,EAAW,4BAAQf,UAAU,+BAA0C,uBAAGA,UAAU,SAASmE,EAAgBI,OAAOtC,MAM9H,SAASuC,KACZ,IAAM3E,EAAMC,qBAAWhB,GADC,EAEEW,mBAAS,CAAEgF,gBAAgB,EAAOC,aAAa,EAAMC,MAAO,EAAGC,MAAO,EAAGC,IAAK,EAAGC,MAAO,IAF1F,mBAEjBnF,EAFiB,KAEVC,EAFU,KAYxB,OARAkB,qBAAU,WACNoD,EAAKa,SAASlF,GAAKmF,KAAnB,uCAAwB,mCAAAnI,EAAA,sDAASgI,EAAT,EAASA,IAAKC,EAAd,EAAcA,MAAOF,EAArB,EAAqBA,MAAOD,EAA5B,EAA4BA,MAChD/E,EAAS,2BAAKD,GAAN,IAAa+E,aAAa,EAAOG,MAAKC,QAAOF,QAAOD,WADxC,2CAAxB,uDAEGM,OAAM,SAAAlD,GACLnC,EAAS,2BAAKD,GAAN,IAAa+E,aAAa,UAEvC,IAGC,kBAAC,GAAD,KACI,yBAAK1E,UAAU,oCACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,SACX,kBAACsE,EAAD,CAAW/H,KAAK,cAAc0F,MAAOtC,EAAMgF,MAAO5D,QAASpB,EAAM+E,cACjE,kBAACJ,EAAD,CAAW/H,KAAK,cAAc0F,MAAOtC,EAAMiF,MAAO7D,QAASpB,EAAM+E,cACjE,kBAACJ,EAAD,CAAW/H,KAAK,YAAY0F,MAAOtC,EAAMkF,IAAK9D,QAASpB,EAAM+E,cAC7D,kBAACJ,EAAD,CAAW/H,KAAK,cAAc0F,MAAOtC,EAAMmF,MAAO/D,QAASpB,EAAM+E,eAGrE,yBAAK1E,UAAU,2DACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qDACX,wDAA8BH,EAAItD,OAEtC,yBAAK8D,QAAS,kBAAMT,EAAS,2BAAKD,GAAN,IAAa8E,gBAAgB,MAASzE,UAAU,WACxE,4BAAQA,UAAU,iEAAlB,6BAQ5B,kBAACgD,EAAD,CAAOC,OAAQtD,EAAM8E,eAAgBtB,UAAW,kBAAMvD,EAAS,2BAAKD,GAAN,IAAa8E,gBAAgB,OACvF,kBAACrB,EAAD,Q,kCCvDT,SAAS8B,GAAT,GAAmF,IAAtDC,EAAqD,EAA3D7J,KAAgB8J,EAA2C,EAA3CA,SACpCvF,EAAMC,qBAAWhB,GAD8D,EAE3DW,mBAAS,yBAC/BnE,KAAM6J,GACHA,GAF2B,IAG9BpE,SAAS,EACTsE,UAAU,KANuE,mBAE9E1F,EAF8E,KAEvEC,EAFuE,KAS7E+B,EAAaC,sBAAbD,SAEF6B,EAAoB1B,uBAAY,SAACC,GACnCnC,EAAS,2BAAKD,GAAN,IAAatF,UAAW0H,EAAEC,OAAOC,WAC1C,CAACtC,IAEE8D,EAAmB3B,uBAAY,SAACC,GAClCnC,EAAS,2BAAKD,GAAN,IAAarF,SAAUyH,EAAEC,OAAOC,WACzC,CAACtC,IAEE2F,EAAgBxD,uBAAY,SAACC,GAC/BnC,EAAS,2BAAKD,GAAN,IAAanF,MAAOuH,EAAEC,OAAOC,WACtC,CAACtC,IAEE4F,EAAkBzD,uBAAY,SAACC,GACjCnC,EAAS,2BAAKD,GAAN,IAAa/E,QAASmH,EAAEC,OAAOC,WACxC,CAACtC,IAEE6F,EAAgB1D,uBAAY,SAACC,GAC/BnC,EAAS,2BAAKD,GAAN,IAAahF,MAAOoH,EAAEC,OAAOC,WACtC,CAACtC,IAGEwC,EAAWL,sBAAW,uCAAC,WAAOC,GAAP,2BAAAlF,EAAA,yDACzBkF,EAAEK,iBACFL,EAAEM,kBAFuB,SAKrBzC,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KALT,EAOkCpB,EAAMrE,KAArDjB,EAPa,EAObA,UAAWC,EAPE,EAOFA,SAAUE,EAPR,EAOQA,MAAOG,EAPf,EAOeA,MAAOC,EAPtB,EAOsBA,QACrC6K,EAAS,CACXpL,UAAWsF,EAAMtF,UACjBC,SAAUqF,EAAMrF,SAChBE,MAAOmF,EAAMnF,MACbG,MAAOgF,EAAMhF,MACbC,QAAS+E,EAAM/E,SAEfkB,KAAKC,UAAU,CAAE1B,YAAWC,WAAUE,QAAOG,QAAOC,cAAekB,KAAKC,UAAU0J,GAfjE,sBAgBX,IAAIhK,MAAM,mBAhBC,wBAmBFvB,EAAKwL,WAAW7F,EAAKsF,EAAS/K,GAAIqL,GAnBhC,eAoBrB7F,EAAS,2BAAKD,GAAN,IAAarE,KAAK,2BAAMqE,EAAMrE,MAASmK,GAAUJ,UAAU,EAAOtE,SAAS,KACnFY,EAAS,6BAA8B,CACnCY,WAAY,YAtBK,kDAyBrB3C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,yBAA0B,CAC5CuG,WAAY,UA3BK,0DAAD,sDA8BzB,CAAC5C,IACEgG,EAAW7D,sBAAW,sBAAC,sBAAAjF,EAAA,kEAErB+C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAER6E,OAAOC,QAAQ,8CAJhB,uBAOjBjG,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAPb,0CAWF7G,EAAK4L,WAAWjG,EAAKsF,EAAS/K,IAX5B,cAYrBwF,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,6BAA8B,CACnCY,WAAY,YAEhB6C,IAhBqB,kDAkBrBxF,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,yBAA0B,CAC5CuG,WAAY,UApBK,0DAuB1B,CAAC5C,IAGErE,EAAOqE,EAAMrE,KAEnB,IAAKA,EACD,OAAO,kBAACyI,EAAD,CAAgB/H,QAAQ,oBAAoBgI,KAAM,kBAAC,IAAD,QAG7D,IAAMnJ,EAAYkL,KAAOzK,EAAKT,WAE9B,OACI,yBAAKmF,UAAU,mBACX,yBAAKA,UAAU,gBACX,4BAAQA,UAAU,wBAAwBC,MAAO,CAAE+F,OAAQ,SACvD,yBAAKhG,UAAU,aAAaC,MAAO,CAAEgG,OAAQ,QAAUC,IAAK5K,EAAKb,mBAEpEkF,EAAM0F,SACH,0BAAMlD,SAAUA,GACZ,yBAAKnC,UAAU,QACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUY,EAAmBvB,MAAOtC,EAAMtF,UAAWyI,KAAK,OAAOD,YAAY,uBACxI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,SAIZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUa,EAAkBxB,MAAOtC,EAAMrF,SAAUwI,KAAK,OAAOD,YAAY,sBACtI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,WAOpB,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAU0C,EAAerD,MAAOtC,EAAMnF,MAAOsI,KAAK,OAAOD,YAAY,mBAChI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,SAKZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAU4C,EAAevD,MAAOtC,EAAMhF,MAAOmI,KAAK,MAAMD,YAAY,0BAC/H,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,WAOpB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAU2C,EAAiBtD,MAAOtC,EAAM/E,QAASkI,KAAK,OAAOD,YAAY,qBACpI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,UAMhB,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,WACX,4BAAQK,QAAS,kBAAMT,EAAS,2BAAKD,GAAN,IAAa0F,UAAU,MAAU3C,SAAU/C,EAAMoB,QAAS+B,KAAK,QAAQ9C,UAAS,2DAA6D,kBAAC,IAAD,MAA5K,gBAEJ,yBAAKA,UAAU,WACX,4BAAQ0C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,yDAAoDL,EAAMoB,QAAU,aAAe,KAAM,kBAAC,IAAD,MAAjJ,wBAKR,oCACI,yBAAKf,UAAU,cACf,uBAAGA,UAAU,wDAAuD,kBAAC,IAAD,MAApE,gBAA+FnF,EAAUsL,WACrG,yBAAKnG,UAAU,6BACX,uBAAGA,UAAU,8BAA6B,kBAAC,IAAD,MAA1C,kBAAqE1E,EAAKjB,UAA1E,YAAuFiB,EAAKhB,WAC5F,uBAAG0F,UAAU,4BAA2B,kBAAC,IAAD,MAAxC,QAA8D1E,EAAKd,OAEnE,uBAAGwF,UAAU,8BAA6B,kBAAC,IAAD,MAA1C,QAAgE1E,EAAKX,OACrE,uBAAGqF,UAAU,8BAA6B,kBAAC,IAAD,MAA1C,QAA6D1E,EAAKV,WAG1E,yBAAKoF,UAAU,wCACX,yBAAKA,UAAU,WACX,4BAAQK,QAAS+E,EAAU1C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,2DAA6D,kBAAC,IAAD,MAAxI,cAEJ,yBAAKA,UAAU,WACX,4BAAQK,QAASsF,EAAUjD,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,wDAAmDL,EAAMoB,QAAU,aAAe,KAAM,kBAAC,IAAD,MAAnK,gBAEJ,yBAAKf,UAAU,WACX,4BAAQK,QAAS,kBAAMT,EAAS,2BAAKD,GAAN,IAAa0F,UAAU,MAAS3C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,kDAAoD,kBAAC,IAAD,MAAnK,kBCvLZoE,KAAKC,eAE7B,SAAS+B,GAAT,GAAiE,IAAjD9K,EAAgD,EAAhDA,KAAM+E,EAA0C,EAA1CA,QAClB,OACI,yBAAKA,QAASA,EAASL,UAAU,gEAC7B,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,gBACX,4BAAQA,UAAU,sBAAsBC,MAAO,CAAE+F,OAAQ,SACrD,yBAAKhG,UAAU,aAAaC,MAAO,CAAEgG,OAAQ,QAAUC,IAAK5K,EAAKb,mBAErE,yBAAKuF,UAAU,SACX,uBAAGC,MAAO,CAAEoG,aAAc,WAAYC,WAAY,UAAYtG,UAAU,4DAAxE,UAAuI1E,EAAKjB,UAA5I,YAAyJiB,EAAKhB,eAQ/K,SAASiM,KACZ,IAAM1G,EAAMC,qBAAWhB,GADH,EAEMW,mBAAc,CACpC+G,aAAa,EACb7B,MAAO,IAAI8B,MACXC,kBAAc7H,IALE,mBAEbc,EAFa,KAENC,EAFM,KAQZ+B,EAAaC,sBAAbD,SAEFgF,EAAa7E,sBAAW,sBAAC,4BAAAjF,EAAA,sEAEvB+C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAFX,SAGHtM,EAAK0M,YAAY/G,EAAKgH,KAAKC,IAAI,EAAGD,KAAKE,KAAKpH,EAAMgF,MAAMqC,Od3CxD,Ic2CqF,IAHlF,aAGjBrC,EAHiB,QAIbqC,OAAS,GAJI,uBAKnBrF,EAAS,wBAAyB,CAC9BY,WAAY,SANG,kBAQZ3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,MARtB,OAUvB5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO7B,MAAM,GAAD,oBAAMhF,EAAMgF,OAAZ,aAAsBA,OAV7C,kDAYvB3H,QAAQC,IAAR,MACA2C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAElC7E,EAAS,2BAA4B,CACjCY,WAAY,UAhBO,0DAmB5B,CAAC5C,IAsBJ,OApBAmB,qBAAU,WACNlB,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KACpBtM,EAAK0M,YAAY/G,GAAKmF,MAAK,SAACL,GACtC,GAAIA,EAAMqC,OAAS,EAIf,OAHArF,EAAS,wBAAyB,CAC9BY,WAAY,SAET3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAE7C5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO7B,cAC1CM,OAAM,SAAAlD,GACL/E,QAAQC,IAAI8E,GACZnC,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAElC7E,EAAS,2BAA4B,CACjCY,WAAY,eAGrB,IAGC,kBAAC,GAAD,KACI,yBAAKvC,UAAU,2BACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,sDACVL,EAAMgF,MAAMsC,KAAI,SAAAC,GAAI,OAAI,kBAACd,GAAD,CAAMe,IAAKD,EAAK9M,GAAIiG,QAAS,WAClDT,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB+G,aAAcQ,QAChD5L,KAAM4L,SAGjB,yBAAK7G,QAASsG,EAAY3G,UAAS,gEAA2DL,EAAM6G,YAAc,aAAe,KAAjI,cAEH7G,EAAM+G,aACH,kBAAC1D,EAAD,CAAOC,QAAQ,EAAME,UAAW,kBAAMvD,EAAS,2BAAKD,GAAN,IAAa+G,kBAAc7H,OACrE,kBAACqG,GAAD,CAAaE,SAAU,kBAAMxF,EAAS,2BAAKD,GAAN,IAAa+G,kBAAc7H,MAAcvD,KAAMqE,EAAM+G,gBAE9F,MC7FT,SAASU,GAAaC,GACzB,IACIC,EAAOT,KAAKU,MAAMV,KAAK5J,IAAI4J,KAAKW,IAAIH,IAAMR,KAAK5J,IAAI,MACnDwK,EAFa,OAEKZ,KAAKa,IAAI,EAAGJ,EAAO,IAEzC,GADAA,EAHiB,OAGDK,QAAQF,GAAU,EAC9BA,EAAQ,CACR,IAAMG,EAAYf,KAAKgB,IAAI,GAAI,GAC/B,OAAOhB,KAAKiB,MAAOT,EAAIR,KAAKgB,IAAI,IAAMP,GAASM,GAAaA,EAAYH,EAExE,OAAOJ,EAgBR,IAAMU,GAAb,iDACI3N,QADJ,OAEI4N,WAFJ,OAGIC,cAHJ,OAIIC,kBAJJ,OAKIC,UAAY,EALhB,KAOIrF,UAPJ,OAQIsF,gBARJ,OASIC,WATJ,OAUIC,KAAe,EAVnB,KAWIC,QAAkB,EAXtB,KAYIC,aAAe,EAZnB,sGAc6BzN,GAd7B,gGAc+CC,EAd/C,+BAcsD,EAAGC,EAdzD,+BA5BgC,GA4BhC,kBAgBmCF,EAAIG,uBAAJ,oCAAwDF,EAAxD,sBAA0EC,GAAa,CAC1GE,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UArBnD,WAgBkBa,EAhBlB,QAwB0BC,GAxB1B,6BAyB0BC,MAzB1B,UAyBuCF,EAASG,OAzBhD,0BAyBwDC,MAzBxD,wCA4ByBJ,EAASG,OA5BlC,iRAkC4BX,EAAkBkB,EAAgB+L,GAlC9D,kGAoCmCjN,EAAIG,uBAAJ,6BAAiDe,GAAU,CAC9Ed,OAAQ,QACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,OAC/B,eAAgB,oBAEpBmB,KAAMC,KAAKC,UAAU,CAAEiM,YA5CvC,WAoCkBzM,EApClB,QA8C0BC,GA9C1B,6BA+C0BC,MA/C1B,SA+CuCF,EAASG,OA/ChD,yBA+CwDC,MA/CxD,wCAkDyBJ,EAASG,OAlDlC,qRAwD4BX,EAAkBkB,GAxD9C,gGAwDsDjB,EAxDtD,+BAwD6D,EAAGC,EAxDhE,+BA3BuC,IA2BvC,kBA0DmCF,EAAIG,uBAAJ,6BAAiDe,EAAjD,wBAAuEjB,EAAvE,sBAAyFC,GAAa,CACzHE,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UA/DnD,WA0DkBa,EA1DlB,QAkE0BC,GAlE1B,6BAmE0BC,MAnE1B,UAmEuCF,EAASG,OAnEhD,0BAmEwDC,MAnExD,wCAsEyBJ,EAASG,OAtElC,mRA4E4BX,EAAkBkB,GA5E9C,kGA8EmClB,EAAIG,uBAAJ,6BAAiDe,GAAU,CAC9Ed,OAAQ,SACRC,eAAgB,cAChBC,QAAS,CACL,OAAU,mBACV,iBAAiB,GAAjB,iBAAqBN,EAAIO,YAAzB,aAAqB,EAAUZ,UAnFnD,WA8EkBa,EA9ElB,QAsF0BC,GAtF1B,6BAuF0BC,MAvF1B,SAuFuCF,EAASG,OAvFhD,yBAuFwDC,MAvFxD,wCA0FyBJ,EAASG,OA1FlC,gNCnBO,SAAS+M,GAAT,GAAmF,IAAtDC,EAAqD,EAA3DC,KAAgBvD,EAA2C,EAA3CA,SACpCvF,EAAMC,qBAAWhB,GAD8D,EAE3DW,mBAAS,CAC/BkJ,KAAMD,EACNV,MAAOU,EAASV,MAChBjH,SAAS,EACTsE,UAAU,IANuE,mBAE9E1F,EAF8E,KAEvEC,EAFuE,OAQvDH,mBAAS,CAAEmJ,MAAM,IARsC,mBAQ9EC,EAR8E,KAQrEC,EARqE,KAU7EnH,EAAaC,sBAAbD,SAEFoH,EAAgBjH,uBAAY,SAACC,GAC/BnC,EAAS,2BAAKD,GAAN,IAAaqI,MAAOjG,EAAEC,OAAOC,WACtC,CAACtC,IAEEqJ,EAAiBlH,sBAAW,uCAAC,WAAOC,GAAP,eAAAlF,EAAA,yDAC/BkF,EAAEK,iBACFL,EAAEM,kBAF6B,SAK3BzC,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAE1BpB,EAAMqI,QAAUrI,EAAMgJ,KAAKX,MAPJ,sBAQjB,IAAIvM,MAAM,mBARO,uBAWLsM,GAAKkB,WAAWpJ,EAAK6I,EAAStO,GAAIuF,EAAMqI,OAXnC,OAWrBkB,EAXqB,OAY3BtJ,EAAS,2BAAKD,GAAN,IAAagJ,KAAK,2BAAMhJ,EAAMgJ,MAAb,IAAmBX,MAAOkB,EAAQlB,QAAS3C,UAAU,EAAOtE,SAAS,KAC9FY,EAAS,6BAA8B,CACnCY,WAAY,YAdW,kDAiB3B3C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,yBAA0B,CAC5CuG,WAAY,UAnBW,0DAAD,sDAsB/B,CAAC5C,IAEEgG,EAAW7D,sBAAW,sBAAC,sBAAAjF,EAAA,kEAErB+C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAER6E,OAAOC,QAAQ,8CAJhB,uBAOjBjG,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAPb,0CAWfgH,GAAKoB,WAAWtJ,EAAK6I,EAAStO,IAXf,OAYrBwF,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,6BAA8B,CACnCY,WAAY,YAEhB6C,IAhBqB,kDAkBrBxF,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,yBAA0B,CAC5CuG,WAAY,UApBK,0DAuB1B,CAAC5C,IAEEyJ,EAAatH,sBAAW,uCAAC,WAAO9F,GAAP,SAAAa,EAAA,kEAEvB+C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,OAE1B/E,EAAQgL,OAAS,IAJE,sBAKb,IAAIvL,MAAM,yDALG,UAQPmK,OAAOC,QAAQ,wEARR,uBAWnBjG,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAXX,2CAejB7G,EAAKmP,SAASxJ,EAAK6I,EAASL,MAAMjO,GAAI4B,EAAS0M,EAAStO,IAfvC,QAgBvBwF,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9B+H,EAAW,CAAEF,MAAM,IACnBjH,EAAS,qCAAsC,CAC3CY,WAAY,YAnBO,kDAsBvB3C,EAAS,2BAAKD,GAAN,IAAaoB,SAAS,KAC9BY,EAAS,KAAE3F,SAAW,uBAAwB,CAC1CuG,WAAY,UAxBO,0DAAD,sDA2B3B,CAAC5C,IAGEgJ,EAAahJ,EAAMgJ,KAEzB,IAAKA,EACD,OAAO,kBAAC5E,EAAD,CAAgB/H,QAAQ,oBAAoBgI,KAAM,kBAAC,IAAD,QAG7D,IAAMnJ,EAAYkL,KAAOuD,KAAKX,EAAKP,WAAa,KAEhD,OACI,yBAAKpI,UAAU,mBACT6I,EAAQD,KAmFF,yBAAK5I,UAAU,gBACX,kBAAC,GAAD,CAASuJ,OAAQ,kBAAMT,EAAW,2BAAKD,GAAN,IAAeD,MAAM,MAAUzG,SAAUiH,EAAYrI,QAASpB,EAAMoB,WAnF7G,yBAAKf,UAAU,gBACX,4BAAQA,UAAU,QAAQC,MAAO,CAAE+F,OAAQ,SACxB,UAAd2C,EAAK7F,KACF,yBAAK7C,MAAO,CAAEgG,OAAQ,QAAUC,IAAKyC,EAAKV,WAEtC,2BAAOuB,UAAQ,EAACtD,IAAKyC,EAAKV,YAGrCtI,EAAM0F,SACH,0BAAMlD,SAAU6G,GACZ,yBAAKhJ,UAAU,SACX,uBAAGA,UAAU,0DAAb,mBACA,yBAAKA,UAAU,0BACX,2BAAO0C,SAAU/C,EAAMoB,QAAS4B,UAAQ,EAAC3C,UAAU,QAAQ4C,SAAUmG,EAAe9G,MAAOtC,EAAMqI,MAAOlF,KAAK,OAAOD,YAAY,mBAChI,0BAAM7C,UAAU,yBACZ,kBAAC,IAAD,SAMZ,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,WACX,4BAAQK,QAAS,kBAAMT,EAAS,2BAAKD,GAAN,IAAa0F,UAAU,MAAU3C,SAAU/C,EAAMoB,QAAS+B,KAAK,QAAQ9C,UAAS,2DAA6D,kBAAC,IAAD,MAA5K,gBAEJ,yBAAKA,UAAU,WACX,4BAAQ0C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,yDAAoDL,EAAMoB,QAAU,aAAe,KAAM,kBAAC,IAAD,MAAjJ,wBAKR,6BACI,uBAAGd,MAAO,CAAEoG,aAAc,YAAcrG,UAAU,oFAAoF2I,EAAKX,OAC3I,uBAAG/H,MAAO,CAAEwJ,eAAgB,iBAAmBzJ,UAAU,sEACrD,8BACI,kBAAC,IAAD,MADJ,gBAC+BnF,EAAUsL,WAEzC,8BACI,kBAAC,IAAD,MADJ,QACiCiB,GAAauB,EAAKH,cADnD,IACmEG,EAAKH,aAAe,EAAI,UAAY,WAG3G,yBAAKxI,UAAU,oBACX,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAMU,GAAE,UAAKxE,GAAL,OAAsBwM,EAAStO,IAAM4H,OAAO,SAASc,KAAK,SAAS9C,UAAS,2CAApF,eAEJ,yBAAKA,UAAU,WACX,4BAAQK,QAAS,kBAAMyI,EAAW,2BAAKnJ,GAAN,IAAaiJ,MAAM,MAASlG,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,kEAA7G,mBAIZ,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAAE+F,OAAQ,SAChD,yBAAKhG,UAAU,aAAaC,MAAO,CAAEgG,OAAQ,QAAUC,IAAKyC,EAAKN,MAAM5N,oBAG/E,yBAAKuF,UAAU,eACX,uBAAGC,MAAO,CAAEoG,aAAc,YAAcrG,UAAU,qDAAlD,UAA0G2I,EAAKN,MAAMhO,UAArH,YAAkIsO,EAAKN,MAAM/N,YAEjJ,yBAAK0F,UAAU,sDACX,uBAAGA,UAAU,uBAAsB,kBAAC,IAAD,MAAnC,IAAmDoH,GAAauB,EAAKL,OACrE,uBAAGtI,UAAU,uBAAsB,kBAAC,IAAD,MAAnC,IAAqDoH,GAAauB,EAAKJ,UACxD,UAAdI,EAAK7F,KAAmB,uBAAG9C,UAAU,uBAAsB,kBAAC,IAAD,MAAnC,IAA8CoH,GAAauB,EAAKR,YAAkB,OAInH,yBAAKnI,UAAU,wCACX,yBAAKA,UAAU,WACX,4BAAQK,QAAS+E,EAAU1C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,2DAA6D,kBAAC,IAAD,MAAxI,cAEJ,yBAAKA,UAAU,WACX,4BAAQK,QAASsF,EAAUjD,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,wDAAmDL,EAAMoB,QAAU,aAAe,KAAM,kBAAC,IAAD,MAAnK,gBAEJ,yBAAKf,UAAU,WACX,4BAAQK,QAAS,kBAAMT,EAAS,2BAAKD,GAAN,IAAa0F,UAAU,MAAS3C,SAAU/C,EAAMoB,QAAS+B,KAAK,SAAS9C,UAAS,kDAAoD,kBAAC,IAAD,MAAnK,kBAgBxC,IAAM0J,GAAU,SAAC,GAAmC,IAAjCvH,EAAgC,EAAhCA,SAAUoH,EAAsB,EAAtBA,OAAQxI,EAAc,EAAdA,QAAc,GACnCjB,qBAAWhB,GACOW,mBAAS,0DAFQ,mBAExCzD,EAFwC,KAE/B2N,EAF+B,KAI/C,OACI,0BAAMxH,SAAU,SAACJ,GACbA,EAAEK,iBACFL,EAAEM,kBAEFF,EAASnG,EAAQuC,UAEjB,kBAAC,IAAD,CAAqByB,UAAU,8BAE/B,yBAAKA,UAAU,SACX,uBAAGA,UAAU,0DAAb,wBACA,yBAAKA,UAAU,0BACX,8BAAU0C,SAAU3B,EAAS4B,UAAQ,EAACiH,UAAW,GAAIC,KAAM,EAAG7J,UAAU,WAAW4C,SAAU,SAACb,GAAD,OAAO4H,EAAW5H,EAAEC,OAAOC,QAAQA,MAAOjG,EAAS6G,YAAY,2DAKpK,yBAAK7C,UAAU,wCACX,yBAAKA,UAAU,WACX,4BAAQK,QAASkJ,EAAQ7G,SAAU3B,EAAS+B,KAAK,QAAQ9C,UAAS,2DAA6D,kBAAC,IAAD,MAA/H,gBAEJ,yBAAKA,UAAU,WACX,4BAAQ0C,SAAU3B,EAAS+B,KAAK,SAAS9C,UAAS,yDAAoDe,EAAU,aAAe,KAAM,kBAAC,IAAD,MAArI,yBC5NIqD,KAAKC,eAE7B,SAAS+B,GAAT,GAAiE,IAAjDuC,EAAgD,EAAhDA,KAAMtI,EAA0C,EAA1CA,QACZ/E,EAAOqN,EAAKN,MAElB,OACI,yBAAKhI,QAASA,EAASL,UAAU,gEAC7B,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,+BACX,4BAAQA,UAAU,gBAAgBC,MAAO,CAAE+F,OAAQ,SAC/C,yBAAKE,IAAKyC,EAAKT,gBAEnB,yBAAKlI,UAAU,aACX,uBAAGC,MAAO,CAAEoG,aAAc,WAAYC,WAAY,UAAYtG,UAAU,oFAAoF2I,EAAKX,OACjK,yBAAKhI,UAAU,kCACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAAE+F,OAAQ,SAChD,yBAAKhG,UAAU,aAAaC,MAAO,CAAEgG,OAAQ,QAAUC,IAAK5K,EAAKb,oBAGzE,yBAAKuF,UAAU,eACX,uBAAGC,MAAO,CAAEoG,aAAc,YAAcrG,UAAU,qDAAlD,UAA0G1E,EAAKjB,UAA/G,YAA4HiB,EAAKhB,YAErI,yBAAK0F,UAAU,yBACI,UAAd2I,EAAK7F,KACF,uBAAG9C,UAAU,kBAAiB,kBAAC,IAAD,MAA9B,IAA8CoH,GAAauB,EAAKL,OAE5D,uBAAGtI,UAAU,kBAAiB,kBAAC,IAAD,MAA9B,IAAyCoH,GAAauB,EAAKR,kBAW5F,SAAS2B,KACZ,IAAMjK,EAAMC,qBAAWhB,GADH,EAEMW,mBAAc,CACpC+G,aAAa,EACb1B,MAAO,IAAI2B,MACXsD,kBAAclL,IALE,mBAEbc,EAFa,KAENC,EAFM,KAQZ+B,EAAaC,sBAAbD,SAEFgF,EAAa7E,sBAAW,sBAAC,4BAAAjF,EAAA,sEAEvB+C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAFX,SAGHuB,GAAKiC,YAAYnK,EAAKgH,KAAKC,IAAI,EAAGD,KAAKE,KAAKpH,EAAMmF,MAAMkC,OF/DxD,IE+DqF,IAHlF,aAGjBlC,EAHiB,QAIbkC,OAAS,GAJI,uBAKnBrF,EAAS,wBAAyB,CAC9BY,WAAY,SANG,kBAQZ3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,MARtB,OAUvB5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO1B,MAAM,GAAD,oBAAMnF,EAAMmF,OAAZ,aAAsBA,OAV7C,kDAYvB9H,QAAQC,IAAR,MACA2C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAClC7E,EAAS,2BAA4B,CACjCY,WAAY,UAfO,0DAkB5B,CAAC5C,IAqBJ,OAnBAmB,qBAAU,WACNlB,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KACpBuB,GAAKiC,YAAYnK,GAAKmF,MAAK,SAACF,GACtC,GAAIA,EAAMkC,OAAS,EAIf,OAHArF,EAAS,wBAAyB,CAC9BY,WAAY,SAET3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAE7C5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO1B,cAC1CG,OAAM,SAAAlD,GACL/E,QAAQC,IAAI8E,GACZnC,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAClC7E,EAAS,2BAA4B,CACjCY,WAAY,eAGrB,IAGC,kBAAC,GAAD,KACI,yBAAKvC,UAAU,2BACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,sDACVL,EAAMmF,MAAMmC,KAAI,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAMC,IAAKD,EAAK9M,GAAIiG,QAAS,WAClDT,GAAS,SAACD,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBoK,aAAc7C,QAChDyB,KAAMzB,SAGjB,yBAAK7G,QAASsG,EAAY3G,UAAS,gEAA2DL,EAAM6G,YAAc,aAAe,KAAjI,cAEH7G,EAAMoK,aACH,kBAAC/G,EAAD,CAAOC,QAAQ,EAAME,UAAW,kBAAMvD,EAAS,2BAAKD,GAAN,IAAaoK,kBAAclL,OACrE,kBAAC4J,GAAD,CAAarD,SAAU,kBAAMxF,EAAS,2BAAKD,GAAN,IAAaoK,kBAAclL,MAAc8J,KAAMhJ,EAAMoK,gBAE9F,MCvGQ3F,KAAKC,eAE7B,SAAS+B,GAAT,GAAgD,IAAhC6D,EAA+B,EAA/BA,OACZ,OACI,yBAAKjK,UAAU,8CACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAAE+F,OAAQ,SAChD,yBAAKhG,UAAU,aAAaC,MAAO,CAAEgG,OAAQ,QAAUC,IAAK+D,EAAOC,OAAOzP,oBAGlF,yBAAKuF,UAAU,eACX,uBAAGC,MAAO,CAAEoG,aAAc,YAAcrG,UAAU,oEAAlD,UAAyHiK,EAAOC,OAAO7P,UAAvI,YAAoJ4P,EAAOC,OAAO5P,cAI9K,yBAAK0F,UAAU,mCACX,uBAAGA,UAAU,6CAA6CiK,EAAOE,cAStF,SAASC,KACZ,IAAMvK,EAAMC,qBAAWhB,GADD,EAEIW,mBAAS,CAC/B+G,aAAa,EACb6D,QAAS,IAAI5D,QAJK,mBAEf9G,EAFe,KAERC,EAFQ,KAMd+B,EAAaC,sBAAbD,SACAvH,EAAOkQ,cAAPlQ,GAEFuM,EAAa7E,sBAAW,sBAAC,4BAAAjF,EAAA,sEAEvB+C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAFX,SAGDuB,GAAKwC,WAAW1K,EAAKzF,EAAIyM,KAAKC,IAAI,EAAGD,KAAKE,KAAKpH,EAAM0K,QAAQrD,OlBvD/D,IkBuD4F,IAHzF,aAGjBqD,EAHiB,QAIXrD,OAAS,GAJE,uBAKnBrF,EAAS,wBAAyB,CAC9BY,WAAY,SANG,kBAQZ3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,MARtB,OAUvB5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO6D,QAAQ,GAAD,oBAAM1K,EAAM0K,SAAZ,aAAwBA,OAVjD,kDAYvBrN,QAAQC,IAAR,MACA2C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAElC7E,EAAS,2BAA4B,CACjCY,WAAY,UAhBO,0DAmB5B,CAAC5C,IAuBJ,OArBAmB,qBAAU,WACNlB,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAElCuB,GAAKwC,WAAW1K,EAAKzF,GAAI4K,MAAK,SAACqF,GAC3B,GAAIA,EAAQrD,OAAS,EAIjB,OAHArF,EAAS,wBAAyB,CAC9BY,WAAY,SAET3C,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAE7C5G,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,EAAO6D,gBAC1CpF,OAAM,SAAAlD,GACL/E,QAAQC,IAAI8E,GACZnC,EAAS,2BAAKD,GAAN,IAAa6G,aAAa,KAElC7E,EAAS,2BAA4B,CACjCY,WAAY,eAGrB,IAEEnI,EAaD,kBAAC,GAAD,KACI,yBAAK4F,UAAU,2BACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,sDACVL,EAAM0K,QAAQpD,KAAI,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAMC,IAAKD,EAAK9M,GAAI6P,OAAQ/C,SAG/D,yBAAK7G,QAASsG,EAAY3G,UAAS,gEAA2DL,EAAM6G,YAAc,aAAe,KAAjI,eAlBJ,kBAAC,GAAD,CAAczF,SAAS,GACnB,yBAAKf,UAAU,qDACX,kBAAC+D,EAAD,CAAgB/H,QAAQ,iBAAiBiI,QAAQ,MCnFrE,IAAMuG,GAAU,WACZ,OACI,yBAAKxK,UAAU,mBAAmBC,MAAO,CAAEgG,OAAQ,OAAQwE,OAAQ,iBAC/D,4BAAQzK,UAAU,oBACd,yBAAKkG,IAAKwE,SAMbC,GAAe,SAAC,GAAkE,IAAhE5J,EAA+D,EAA/DA,QAASG,EAAsD,EAAtDA,SACpC,OACI,yBAAKlB,UAAU,YACVe,EAAU,kBAAC,GAAD,MAAc,oCAAGG,KAK3B0J,GAAO,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAEbhK,GADMf,qBAAWhB,GACPgB,qBAAWd,IAE3B,OAAI6L,EAAsB,kBAAC,GAAD,CAAc9J,SAAO,IAGvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOzD,KAAMpB,EAAauE,OAAK,GAC3B,kBAACgB,EAAD,OAEJ,kBAAC,IAAD,CAAOnE,KAAMpB,EAAgBuE,OAAK,GAC9B,kBAACsC,EAAD,OAGJ,kBAAC,IAAD,CAAOzF,KAAMpB,EAAcuE,OAAK,GAC5B,kBAACG,EAAD,OAGJ,kBAACK,EAAD,CAAW3D,KAAMpB,GACb,kBAACsI,GAAD,OAEJ,kBAACvD,EAAD,CAAW3D,KAAMpB,EAAauE,OAAK,GAC/B,kBAAC8F,GAAD,OAEJ,kBAACtF,EAAD,CAAW3D,KAAMpB,EAAauE,OAAK,GAC/B,kBAACqJ,GAAD,OAEJ,kBAAC7I,EAAD,CAAW3D,KAAMpB,GACb,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOoB,KAAMpB,EAAYuE,OAAK,GACzBI,EAAQ5B,SAED,kBAAC,IAAD,CAAUyB,GAAIxE,IAGd,kBAAC,IAAD,CAAUwE,GAAIxE,KAK1B,kBAAC+E,EAAD,KACI,kBAAC,GAAD,CAAcF,QAAS8J,GACnB,yBAAK7K,UAAU,qDACX,kBAAC+D,EAAD,CAAgB/H,QAAQ,iBAAiBiI,QAAQ,SCzB9D6G,OAtCf,WAAgB,IAAD,EACarL,mBAAmB,CAC3CnD,OAAO,EACPyE,SAAS,IAHE,mBACNpB,EADM,KACCC,EADD,OAKuBH,wBAA2BZ,GALlD,mBAKNI,EALM,KAKIC,EALJ,KAOP6L,EAAc,CAClB7L,kBACAD,WACAE,WAAY,SAAC4B,GAAD,OAAanB,EAAS,2BAAKD,GAAN,IAAaoB,eAgBhD,OAbAD,qBAAU,WACR1E,EAAoBE,MAAM0I,MAAK,WACzB5I,EAAoB6C,WACtBC,EAAgB9C,EAAoBd,MAEpC4D,OAAgBL,GAElBe,EAAS,2BAAKD,GAAN,IAAarD,OAAO,QAC3B0O,SAAQ,WACT5O,EAAoBK,eAAiB,kBAAMsO,EAAY7L,qBAAgBL,SAExE,IAGD,kBAAC,gBAAD,CAAeoM,aAAW,EAACC,mBApCC,IAoC4CC,UAAU,cAChF,kBAACrM,EAAoBsM,SAArB,CAA8BnJ,MAAO7F,GACnC,kBAAC4C,EAAaoM,SAAd,CAAuBnJ,MAAO8I,GAC5B,kBAACxL,EAAD,CAASC,QAASG,EAAMrD,QACxB,kBAAC,GAAD,CAAMuO,aAAclL,EAAMrD,OAASqD,EAAMoB,cCrC/BsK,QACW,cAA7BzF,OAAOxE,SAAS1D,UAEe,UAA7BkI,OAAOxE,SAAS1D,UAEhBkI,OAAOxE,SAAS1D,SAAS4N,MACvB,2DCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAS,kBACtB,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcxP,MACrB0I,MAAK,SAAA+G,GACJA,EAAaC,gBAEd/G,OAAM,SAAAtJ,GACLqB,QAAQrB,MAAMA,EAAMK,c","file":"static/js/main.7b4d7bae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_icon.1a7489ab.gif\";","import React, { useState, useContext } from 'react'\r\nimport { STYLES } from '../lib/theme'\r\nimport { FaCog, FaJoint, FaLayerGroup, FaSignOutAlt, FaUser, FaUserCircle, FaUserPlus, FaUsers } from \"react-icons/fa\";\r\nimport { AiOutlineNotification } from \"react-icons/ai\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { links } from \"../lib/util\";\r\nimport { link } from 'fs';\r\n\r\n\r\nconst AUTOHIDE_TIMEOUT = 20000\r\nlet timer: any\r\n// TODO: build your own toolbar styling.\r\n\r\nexport default function Toolbar({ hidden = false }) {\r\n    const [state, setState] = useState({ showMenu: false })\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const vctx = useContext(VIEW_CONTEXT)\r\n\r\n    return (\r\n        <nav className={`navbar ${hidden ? 'is-hidden' : ''}`} role='navigation' style={STYLES.toolbar}>\r\n            <div className='navbar-brand'>\r\n                <div className='navbar-items is-flex-centered is-uppercase has-text-weight-bold px-4 py-2'>\r\n                    {ctx.name}\r\n                </div>\r\n                <div role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" onClick={() => {\r\n                    // Clear the existing timer for closing menu and then hide/show the menu\r\n                    clearTimeout(timer)\r\n                    if (state.showMenu) {\r\n                        setState({ ...state, showMenu: false })\r\n                    } else {\r\n                        setState({ ...state, showMenu: true })\r\n                        timer = setTimeout(() => {\r\n                            setState({ ...state, showMenu: false })\r\n                        }, AUTOHIDE_TIMEOUT)\r\n                    }\r\n                }}>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\r\n                {ctx.signedIn() && vctx.signedIn ? (\r\n                    <>\r\n                        <div className='navbar-start'>\r\n                            <NavLink className='navbar-item is-tab is-uppercase' exact to={links.dashboard} activeClassName='is-active'>Dashboard</NavLink>\r\n                            <NavLink className='navbar-item is-tab is-uppercase' to={links.posts} activeClassName='is-active'>Posts</NavLink>\r\n                            <NavLink className='navbar-item is-tab is-uppercase' to={links.users} activeClassName='is-active'>Users</NavLink>\r\n                        </div>\r\n                        <div className='navbar-end'>\r\n                            <div className='navbar-item has-dropdown is-hoverable'>\r\n                                <div className='navbar-link is-flex-centered'>\r\n                                    <FaUserCircle />&nbsp; {ctx.user?.firstName}\r\n                                </div>\r\n                                <div className='navbar-dropdown is-right'>\r\n                                    {/*\r\n                                     <Link className='navbar-item is-flex-centered' to={links.settings}><FaCog />&nbsp; Settings</Link>\r\n                                    <hr className='navbar-divider' /> \r\n                                    */}\r\n                                    <Link className='navbar-item is-flex-centered' to={links.logout}><FaSignOutAlt />&nbsp; Logout</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                        <div className='navbar-end'>\r\n                            <div className='buttons navbar-item has-addons is-uppercase'>\r\n                                <Link to={links.login} className='button is-info is-rounded is-small is-outlined'>\r\n                                    <FiLogIn /> &nbsp; Login\r\n                                </Link>\r\n                                <Link to={links.register} className='button is-success is-rounded is-small'>\r\n                                    <FaUserPlus /> &nbsp; Join\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import { Application } from \".\"\r\n\r\nexport const USERS_PAGE_LIMIT = 20\r\n\r\nexport class User {\r\n    id\r\n    firstName\r\n    lastName\r\n    role: 'player' | 'manager' | 'superadmin'\r\n    email: string\r\n    profileImageURL?: string\r\n    token?: string\r\n    phone\r\n    country\r\n    createdAt\r\n\r\n    constructor(data) {\r\n        this.id = data.id\r\n        this.role = data.role\r\n        this.firstName = data.firstName\r\n        this.lastName = data.lastName\r\n        this.email = data.email\r\n        this.token = data.token\r\n    }\r\n\r\n    static async getAllUsers(app: Application, page = 1, pageLimit = USERS_PAGE_LIMIT): Promise<User[]> {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/persons/persons?pageNo=${page}&pageLimit=${pageLimit}`, {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async updateUser(app: Application, userID: string, data): Promise<User> {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/persons/persons/${userID}`, {\r\n                method: 'PATCH',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async deleteUser(app: Application, userID: string) {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/persons/persons/${userID}`, {\r\n                method: 'DELETE',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`,\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n\r\n    static async warnUser(app: Application, userID, message, postID: string) {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/persons/persons/flag/${userID}`, {\r\n                method: 'POST',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`,\r\n                },\r\n                body: JSON.stringify({ message, postID })\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}","export const links = {\r\n    settings: '/settings',\r\n    logout: '/logout',\r\n    users: '/users',\r\n    posts: '/posts',\r\n    dashboard: '/dashboard',\r\n    login: '/login',\r\n    register: '/register',\r\n    root: '/',\r\n    reports: '/posts/reports/:id',\r\n    _reports: '/posts/reports/'\r\n\r\n}\r\n\r\nexport const storageKeys = {\r\n    USER_SESSION: 'app.user.session',\r\n    REFRESH_TOKEN: 'app.token.refresh'\r\n}","import { createContext } from \"react\";\r\nimport { User } from \"./user\";\r\nimport { IConfig, DEFAULT_CONFIG } from \"./config\";\r\nimport validator from \"validator\";\r\nimport * as localforage from \"localforage\";\r\nimport { storageKeys } from \"./util\";\r\n\r\nexport class Application {\r\n    ready: Promise<boolean>\r\n    name = \"Karry Admin\"\r\n    version = \"1.0\"\r\n\r\n    protected config: IConfig\r\n    public user?: User\r\n\r\n    logoutListener\r\n\r\n    constructor(config) {\r\n        this.config = config\r\n        this.ready = new Promise(async (res, rej) => {\r\n            try {\r\n                // handle app initialization here\r\n                await this.init()\r\n\r\n                // check for existing user session\r\n                try {\r\n                    await this.inflateUser()\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n                res(true)\r\n            } catch (e) {\r\n                console.log(e)\r\n                rej(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    protected async init() {\r\n        // initialize storage\r\n        localforage.config({\r\n            driver: [\r\n                localforage.INDEXEDDB,\r\n                localforage.LOCALSTORAGE,\r\n                localforage.WEBSQL\r\n            ],\r\n            name: `${this.name} v${this.version}`,\r\n            version: 1,\r\n            storeName: 'adminstore',\r\n            description: ''\r\n        })\r\n        await localforage.ready()\r\n    }\r\n\r\n    async initiateNetworkRequest(path: string, request?: RequestInit): Promise<Response> {\r\n        request = {\r\n            ...request,\r\n            mode: 'cors'\r\n        }\r\n        const resp = await fetch(`${this.config.hostname}${path}`, request)\r\n        if (resp.status === 401) {\r\n            if (!this.user) {\r\n                throw new Error(\"Unauthenticated access not allowed!\")\r\n            }\r\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\r\n            //\r\n            // Try to reauthenticate the user\r\n            try {\r\n                const { token } = await this.reauthenticate()\r\n                this.user.token = token\r\n                // since token is generated already, retry the request\r\n                if (request && request.headers && request.headers['x-access-token']) {\r\n                    request.headers['x-access-token'] = token\r\n                }\r\n                return await this.initiateNetworkRequest(path, request)\r\n            } catch (e) {\r\n                await this.logout()\r\n                throw e || new Error(\"App session expired. Login to continue!\")\r\n            }\r\n        }\r\n        return resp\r\n    }\r\n\r\n    protected async reauthenticate(): Promise<{ token: string }> {\r\n        try {\r\n            const refToken = await localforage.getItem(storageKeys.REFRESH_TOKEN)\r\n            if (!refToken) {\r\n                throw new Error(\"Cannot refresh session. You must login to continue!\")\r\n            }\r\n            const response = await this.initiateNetworkRequest('/admin/persons/refresh', {\r\n                method: 'POST',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({ token: refToken })\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n            await localforage.setItem(storageKeys.REFRESH_TOKEN, jsonResponse.refreshToken)\r\n            delete jsonResponse.refreshToken\r\n            return jsonResponse\r\n        } catch (e) {\r\n            console.log(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    protected async inflateUser() {\r\n        // inflate user session\r\n        let session: User | null = await localforage.getItem(storageKeys.USER_SESSION)\r\n        if (!session) throw new Error(\"No session available for user!\")\r\n\r\n        this.user = new User(session)\r\n        return this.user\r\n    }\r\n\r\n    protected async persistUser() {\r\n        if (!this.user) {\r\n            throw new Error('No user created!')\r\n        }\r\n\r\n        await localforage.setItem(storageKeys.USER_SESSION, this.user)\r\n    }\r\n\r\n    signedIn() {\r\n        return this.user\r\n    }\r\n\r\n    async login(username, password) {\r\n        try {\r\n            await this.validateLogin(username, password)\r\n\r\n            const response = await this.initiateNetworkRequest('/admin/persons/login', {\r\n                method: 'POST',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email: username, password })\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n            await localforage.setItem(storageKeys.REFRESH_TOKEN, jsonResponse.refreshToken)\r\n            delete jsonResponse.refreshToken\r\n            this.user = new User(jsonResponse)\r\n            await this.persistUser()\r\n\r\n            return this.user\r\n\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    protected async validateLogin(username: string, password: string) {\r\n        if (!username || !password) {\r\n            throw new Error(\"Credentials not provided!\")\r\n        }\r\n        username = username.trim()\r\n\r\n        if (!username || !validator.isEmail(username)) {\r\n            throw new Error(\"Invalid username provided!\")\r\n        }\r\n        if (!validator.matches(password, /[a-zA-z0-9]{6,}/i)) {\r\n            throw new Error(\"Invalid password provided (Password must be alphanumeric and more than 6 characters)!\")\r\n        }\r\n    }\r\n\r\n\r\n    async addAdmin(data) {\r\n        try {\r\n            await this.validateRegister(data)\r\n\r\n            const response = await this.initiateNetworkRequest('/admin/persons/new', {\r\n                method: 'POST',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${this.user?.token}`\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n            const user = new User(jsonResponse)\r\n\r\n            return user\r\n\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    protected async validateRegister(data) {\r\n        let { email, password, firstName, lastName, passwordVerify } = data\r\n        if (!email || !password) {\r\n            throw new Error(\"Credentials not provided!\")\r\n        }\r\n        if (password !== passwordVerify) {\r\n            throw new Error('Passwords do not match!')\r\n        }\r\n        email = email.trim()\r\n        firstName = firstName.trim()\r\n        lastName = lastName.trim()\r\n        if (!firstName || !lastName) {\r\n            throw new Error('Firstname and lastname must be provided!')\r\n        }\r\n        if (!email || !validator.isEmail(email)) {\r\n            throw new Error(\"Invalid username provided!\")\r\n        }\r\n        if (!validator.matches(password, /[a-zA-z0-9]{6,}/i)) {\r\n            throw new Error(\"Invalid password provided (Password must be alphanumeric and more than 6 characters)!\")\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        this.user = undefined\r\n        localforage.removeItem(storageKeys.USER_SESSION)\r\n        localforage.removeItem(storageKeys.REFRESH_TOKEN)\r\n        if (this.logoutListener) {\r\n            this.logoutListener()\r\n        }\r\n    }\r\n}\r\n\r\nexport const MOCK_DATA = {\r\n    route: {\r\n        Ajah: [\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 1' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 2' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 3' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 4' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 5' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 6' },\r\n            { longitude: 3.90, latitude: 6.442, name: 'Bus stop 7' }\r\n        ]\r\n    }\r\n}\r\n\r\nexport const DEFAULT_APPLICATION = new Application(DEFAULT_CONFIG)\r\n\r\n/**\r\n * This is the application context used within the web application.\r\n * \r\n * This context provided the application engine and is not tied to any view rendering.\r\n * \r\n * The underlying aplication object exposes the required functions and do not modify the view.\r\n * This underlying object is made available to all React components via the application context.\r\n * \r\n * All view rendering is managed in React.\r\n * \r\n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\r\n */\r\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\r\n\r\n/**\r\n * This context is used for managing the views within the web app.\r\n * Activities such as loading and splashscreen are implemented using this context.\r\n */\r\nexport const VIEW_CONTEXT = createContext<{\r\n    signedIn: undefined | User,\r\n    setSignedInUser: (user) => any,\r\n    setLoading: (loading: boolean) => any\r\n}>({\r\n    signedIn: undefined,\r\n    setSignedInUser: () => { },\r\n    setLoading: () => { }\r\n})","export interface IConfig {\r\n    hostname: string\r\n}\r\n\r\n\r\nexport const DEFAULT_CONFIG: IConfig = {\r\n    hostname: 'https://karry-esports-app-dev.herokuapp.com'\r\n}","import React from 'react'\r\n\r\nexport const STYLES: { [key: string]: React.CSSProperties } = {\r\n    toolbar: {\r\n        boxShadow: \"-2px 2px 3px 0px #8888\",\r\n        // background: \"#282c34\",\r\n    }\r\n}","import React, { useContext, useState, useCallback, useEffect } from 'react';\r\nimport { FaExclamationCircle, FaUserCircle, FaUser, FaKey, FaEyeSlash, FaEye } from 'react-icons/fa';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { BodyFragment } from '../components/body';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { VIEW_CONTEXT, APPLICATION_CONTEXT } from '../lib';\r\nimport { links } from '../lib/util';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nexport function Logout() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n\r\n    useEffect(() => {\r\n        ctx.logout()\r\n    }, [])\r\n\r\n    if (!viewCTX.signedIn) {\r\n        return <Redirect to={{ pathname: '/' }} />\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        viewCTX.signedIn ? <BodyFragment loading /> : <Redirect to={{ pathname: '/' }} />\r\n    )\r\n}","import React, { useContext } from \"react\"\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\r\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\r\nimport { links } from \"../lib/util\"\r\n\r\nexport function AuthGuard({ children, ...rest }: RouteProps) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {ctx.signedIn() && viewCTX.signedIn ? (\r\n                children\r\n            ) : (\r\n                    <Redirect to={{\r\n                        pathname: links.login,\r\n                        state: {\r\n                            from: location\r\n                        }\r\n                    }} />\r\n                )\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport function AuthHandler({ children }) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const location = useLocation(),\r\n        history = useHistory()\r\n\r\n\r\n\r\n    if (ctx.signedIn() && viewCTX.signedIn) {\r\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\r\n        return <Redirect to={from} />\r\n    } else {\r\n        return children\r\n    }\r\n}","import React, { useContext, useState, useCallback } from 'react';\r\nimport { FaExclamationCircle, FaUserCircle, FaUser, FaKey, FaEyeSlash, FaEye } from 'react-icons/fa';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\nimport { BodyFragment } from '../components/body';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { VIEW_CONTEXT, APPLICATION_CONTEXT } from '../lib';\r\nimport { links } from '../lib/util';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nexport function Login() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const [state, setState] = useState({\r\n        showPassword: false,\r\n        username: '',\r\n        password: '',\r\n        loading: false\r\n    })\r\n    const { addToast } = useToasts()\r\n\r\n    const onUsernameChange = useCallback((e) => {\r\n        setState({ ...state, username: e.target.value })\r\n    }, [state])\r\n\r\n    const onPasswordChange = useCallback((e) => {\r\n        setState({ ...state, password: e.target.value })\r\n    }, [state])\r\n\r\n    const onSubmit = useCallback(async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        try {\r\n            setState({ ...state, loading: true })\r\n            const user = await ctx.login(state.username, state.password)\r\n            \r\n            viewCTX.setSignedInUser(user)\r\n            setState({ ...state, loading: false })\r\n            addToast('Login successful!', {\r\n                appearance: 'success',\r\n            })\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to login!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    const toggleShowPassword = useCallback(() => {\r\n        setState((state) => ({ ...state, showPassword: !state.showPassword }))\r\n    }, [state])\r\n\r\n    return (\r\n        <AuthHandler>\r\n            <BodyFragment>\r\n                <div className='container is-paddingless is-fluid is-flex is-fullheight is-flex-centered has-background-info-light'>\r\n                    <div className='columns section is-mobile is-multiline is-vcentered is-flex-centered' style={{ flex: 1 }}>\r\n                        <div className='column is-10-tablet is-12-mobile'>\r\n                            <div className='card has-radius'>\r\n                                <div className='card-content section'>\r\n                                    <div className='has-text-weight-bold'>\r\n                                        <FaUserCircle className='is-size-1' />\r\n                                        <form className='px-6 pt-4' onSubmit={onSubmit}>\r\n                                            <div className='field'>\r\n                                                <p className='help is-uppercase mb-2'>Enter your admin credentials</p>\r\n                                                <div className='control has-icons-left'>\r\n                                                    <input disabled={state.loading} required value={state.username} onChange={onUsernameChange} placeholder='enter your username...' className='input' type='text' />\r\n                                                    <span className='icon is-left is-small'><FaUser /></span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='field has-addons'>\r\n                                                <div className='control has-icons-left is-expanded'>\r\n                                                    <input disabled={state.loading} required value={state.password} onChange={onPasswordChange} placeholder='enter your password...' className='input' type={state.showPassword ? 'text' : 'password'} />\r\n                                                    <span className='icon is-left is-small'><FaKey /></span>\r\n                                                </div>\r\n                                                <div className='control'>\r\n                                                    <button className='button' type='button' onClick={toggleShowPassword}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button disabled={state.loading} type='submit' className={`button is-info is-rounded ${state.loading ? 'is-loading' : ''}`}>\r\n                                                <FiLogIn /> &nbsp; Login\r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </BodyFragment>\r\n        </AuthHandler>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { MdLocationOn } from \"react-icons/md\";\r\nimport { VIEW_CONTEXT, MOCK_DATA } from '../lib';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { BodyFragment } from '../components/body';\r\nimport { FaExclamationCircle } from 'react-icons/fa';\r\nimport { FiLogIn } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\nimport { links } from '../lib/util';\r\n\r\nexport function Register() {\r\n    // const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n\r\n    return (\r\n        <AuthHandler>\r\n            <BodyFragment>\r\n                <div className='container is-paddingless is-fluid is-flex is-fullheight is-flex-centered has-background-danger-light'>\r\n                    <div className='columns section is-mobile is-multiline is-vcentered is-flex-centered' style={{ flex: 1 }}>\r\n                        <div className='column is-10-tablet is-12-mobile'>\r\n                            <div className='card has-radius'>\r\n                                <div className='card-content section'>\r\n                                    <div className='has-text-weight-bold'>\r\n                                        <FaExclamationCircle className='has-text-danger is-size-1' />\r\n                                        <p className='is-size-4'>UNAUTHORIZED ACTION</p>\r\n                                        <p className='has-text-weight-normal pt-4 is-capitalized'>Contact your admin to create an account for you!</p>\r\n                                        <p className='has-text-weight-normal pb-4 is-capitalized'>If you already have an account, kindly proceed to login</p>\r\n                                        <Link to={links.login} className='button is-info is-rounded'>\r\n                                            <FiLogIn /> &nbsp; Login\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </BodyFragment>\r\n        </AuthHandler>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Modal({ active = false, children, isCard = false, onDismiss = () => { } }) {\r\n\r\n    return (\r\n        <div className={`modal ${active ? 'is-active' : ''}`}>\r\n            <div className='modal-background'></div>\r\n            <div className='modal-content'>{children}</div>\r\n            {isCard ? null : <button onClick={onDismiss} className='modal-close is-large' aria-label='close'></button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ModalCard({ header, children, onDismiss, footer = <></> }) {\r\n    return (\r\n        <div className='modal-card'>\r\n            <div className='modal-card-head'>\r\n                <p className='modal-card-title'>{header}</p>\r\n                <button onClick={onDismiss} className='delete' aria-label='close'></button>\r\n            </div>\r\n            <div className='modal-card-body'>{children}</div>\r\n            <div className='modal-card-foot'>{footer}</div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useContext } from \"react\";\r\nimport { FaRegUserCircle, FaUserLock, FaKey, FaEyeSlash, FaEye, FaUserTie, FaAd, FaPlusCircle, FaExclamationTriangle } from \"react-icons/fa\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { APPLICATION_CONTEXT } from \"../lib\";\r\n\r\nexport function AddAdmin() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        password: '',\r\n        passwordVerify: '',\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        creatorPassword: '',\r\n        showPassword: false,\r\n        showVerifyPassword: false,\r\n        showCreatorPassword: false\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const onFirstNameChange = useCallback((e) => {\r\n        setState({ ...state, firstName: e.target.value })\r\n    }, [state])\r\n\r\n    const onLastNameChange = useCallback((e) => {\r\n        setState({ ...state, lastName: e.target.value })\r\n    }, [state])\r\n\r\n    const onUsernameChange = useCallback((e) => {\r\n        setState({ ...state, username: e.target.value })\r\n    }, [state])\r\n\r\n    const onPasswordChange = useCallback((e) => {\r\n        setState({ ...state, password: e.target.value })\r\n    }, [state])\r\n\r\n    const onVerifyPasswordChange = useCallback((e) => {\r\n        setState({ ...state, passwordVerify: e.target.value })\r\n    }, [state])\r\n\r\n    const onCreatorPasswordChange = useCallback((e) => {\r\n        setState({ ...state, creatorPassword: e.target.value })\r\n    }, [state])\r\n\r\n\r\n    const onSubmit = useCallback(async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        try {\r\n            setState({ ...state, loading: true })\r\n            const { username, password, passwordVerify, firstName, lastName, creatorPassword } = state\r\n            const user = await ctx.addAdmin({\r\n                email: username,\r\n                firstName,\r\n                lastName,\r\n                password,\r\n                passwordVerify,\r\n                creatorPassword\r\n            })\r\n            console.log(user, ':admin created')\r\n            setState({ ...state, loading: false })\r\n            addToast('Successfully created admin!', {\r\n                appearance: 'success',\r\n            })\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to create admin!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    const toggleShowPassword = useCallback(() => {\r\n        setState((state) => ({ ...state, showPassword: !state.showPassword }))\r\n    }, [state])\r\n    const toggleShowVerifyPassword = useCallback(() => {\r\n        setState((state) => ({ ...state, showVerifyPassword: !state.showVerifyPassword }))\r\n    }, [state])\r\n    const toggleShowCreatorPassword = useCallback(() => {\r\n        setState((state) => ({ ...state, showCreatorPassword: !state.showCreatorPassword }))\r\n    }, [state])\r\n\r\n    return (\r\n        <form className='card has-radius' onSubmit={onSubmit}>\r\n            <div className='card-content'>\r\n                <FaRegUserCircle className='is-size-1 mb-4' />\r\n                <p className='help mb-2 is-uppercase has-text-weight-bold'>Enter New Admin Details</p>\r\n\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control has-icons-left'>\r\n                                <input disabled={state.loading} required className='input' onChange={onFirstNameChange} value={state.firstName} type='text' placeholder='enter firstname...' />\r\n                                <span className='icon is-small is-left'>\r\n                                    <FaUserTie />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='control has-icons-left'>\r\n                                <input disabled={state.loading} required className='input' onChange={onLastNameChange} value={state.lastName} type='text' placeholder='enter lastname...' />\r\n                                <span className='icon is-small is-left'>\r\n                                    <FaUserTie />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field'>\r\n                    <div className='control has-icons-left'>\r\n                        <input disabled={state.loading} required className='input' onChange={onUsernameChange} value={state.username} type='text' placeholder='enter username...' />\r\n                        <span className='icon is-small is-left'>\r\n                            <FaUserLock />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field has-addons'>\r\n                            <div className='control has-icons-left is-expanded'>\r\n                                <input disabled={state.loading} onChange={onPasswordChange} required value={state.password} placeholder='enter admin password' className='input' type={state.showPassword ? 'text' : 'password'} />\r\n                                <span className='icon is-left is-small'><FaKey /></span>\r\n                            </div>\r\n                            <div className='control'>\r\n                                <button className='button' type='button' onClick={toggleShowPassword}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='field has-addons'>\r\n                            <div className='control has-icons-left is-expanded'>\r\n                                <input disabled={state.loading} onChange={onVerifyPasswordChange} required value={state.passwordVerify} placeholder='verify password' className='input' type={state.showVerifyPassword ? 'text' : 'password'} />\r\n                                <span className='icon is-left is-small'><FaKey /></span>\r\n                            </div>\r\n                            <div className='control'>\r\n                                <button className='button' type='button' onClick={toggleShowVerifyPassword}>{state.showVerifyPassword ? <FaEyeSlash /> : <FaEye />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className='help is-danger is-uppercase mt-6 has-text-weight-bold'>Enter your admin password to confirm</p>\r\n                <div className='field has-addons'>\r\n                    <div className='control has-icons-left is-expanded'>\r\n                        <input disabled={state.loading} onChange={onCreatorPasswordChange} required value={state.creatorPassword} placeholder='confirm admin password' className='input' type={state.showCreatorPassword ? 'text' : 'password'} />\r\n                        <span className='icon is-left is-small'><FaKey /></span>\r\n                    </div>\r\n                    <div className='control'>\r\n                        <button className='button' type='button' onClick={toggleShowCreatorPassword}>{state.showCreatorPassword ? <FaEyeSlash /> : <FaEye />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <button disabled={state.loading} type='submit' className={`button mt-4 is-info is-rounded ${state.loading ? 'is-loading' : ''}`}>\r\n                    <FaPlusCircle /> &nbsp; Add Admin Account\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport function EmptyComponent({ icon = <FaExclamationTriangle />, message = \"No data available!\", shadow = true }) {\r\n    return (\r\n        <div className={`card has-radius ${shadow ? '' : 'is-shadowless'}`}>\r\n            <div className='card-content'>\r\n                <span className='is-size-1 has-text-danger block'>{icon}</span>\r\n                <p className='is-uppercase has-text-weight-bold is-size-7'>{message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Application } from \".\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Stat {\r\n    static async getCount(app: Application) {\r\n        try {\r\n            const response = await app.initiateNetworkRequest('/admin/persons/count', {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json', \r\n                    'x-access-token': `${app.user?.token}`\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { BodyFragment } from '../components/body';\r\nimport Map from \"../components/map\";\r\nimport { MOCK_DATA, APPLICATION_CONTEXT } from '../lib';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { Modal } from '../components/modal';\r\nimport { FaRegUserCircle, FaUserLock } from 'react-icons/fa';\r\nimport { AddAdmin } from '../components/misc';\r\nimport { Stat } from '../lib/stat';\r\n\r\nconst numberFormatter = Intl.NumberFormat()\r\n\r\nfunction ItemCount({ name, value, loading = false }) {\r\n    return (\r\n        <div className='level-item has-text-centered'>\r\n            <div>\r\n                <p className='heading'>{name}</p>\r\n                {loading ? (<button className='button is-white is-loading'></button>) : <p className='title'>{numberFormatter.format(value)}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Dashboard() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({ showAdminModal: false, loadingStat: true, users: 0, teams: 0, ads: 0, posts: 0 })\r\n\r\n    useEffect(() => {\r\n        Stat.getCount(ctx).then(async ({ ads, posts, teams, users }) => {\r\n            setState({ ...state, loadingStat: false, ads, posts, teams, users })\r\n        }).catch(e => {\r\n            setState({ ...state, loadingStat: false })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <BodyFragment>\r\n            <div className='container is-fluid is-fullheight'>\r\n                <div className='section my-4'>\r\n                    <div className='level'>\r\n                        <ItemCount name='Total Users' value={state.users} loading={state.loadingStat} />\r\n                        <ItemCount name='Total Teams' value={state.teams} loading={state.loadingStat} />\r\n                        <ItemCount name='Total Ads' value={state.ads} loading={state.loadingStat} />\r\n                        <ItemCount name='Total Posts' value={state.posts} loading={state.loadingStat} />\r\n                    </div>\r\n\r\n                    <div className='mt-6 columns is-multiline is-vcentered is-flex-centered'>\r\n                        <div className='column is-4-desktop is-6-tablet'>\r\n                            <div className='card'>\r\n                                <div className='card-content'>\r\n                                    <div className='block has-text-weight-bold is-size-7 is-uppercase'>\r\n                                        <p>Add a new admin to manage {ctx.name}</p>\r\n                                    </div>\r\n                                    <div onClick={() => setState({ ...state, showAdminModal: true })} className='control'>\r\n                                        <button className='button is-size-7 is-dark is-fullwidth is-rounded is-uppercase'>Create a new admin</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal active={state.showAdminModal} onDismiss={() => setState({ ...state, showAdminModal: false })}>\r\n                <AddAdmin />\r\n            </Modal>\r\n        </BodyFragment>\r\n    )\r\n}\r\n\r\n","import moment from \"moment\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport { FaCheck, FaChevronLeft, FaClock, FaEnvelope, FaGlobe, FaPencilAlt, FaPhoneAlt, FaPhoneSquareAlt, FaPlusCircle, FaTrash, FaUser, FaUserAltSlash, FaUserCircle, FaUserSlash } from \"react-icons/fa\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { APPLICATION_CONTEXT } from \"../lib\";\r\nimport { User } from \"../lib/user\";\r\nimport { EmptyComponent } from \"./misc\";\r\n\r\nexport function UserDetails({ user: userProp, onCancel }: { user: User, onCancel: any }) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        user: userProp,\r\n        ...userProp,\r\n        loading: false,\r\n        showEdit: false,\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const onFirstNameChange = useCallback((e) => {\r\n        setState({ ...state, firstName: e.target.value })\r\n    }, [state])\r\n\r\n    const onLastNameChange = useCallback((e) => {\r\n        setState({ ...state, lastName: e.target.value })\r\n    }, [state])\r\n\r\n    const onEmailChange = useCallback((e) => {\r\n        setState({ ...state, email: e.target.value })\r\n    }, [state])\r\n\r\n    const onCountryChange = useCallback((e) => {\r\n        setState({ ...state, country: e.target.value })\r\n    }, [state])\r\n\r\n    const onPhoneChange = useCallback((e) => {\r\n        setState({ ...state, phone: e.target.value })\r\n    }, [state])\r\n\r\n\r\n    const onSubmit = useCallback(async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        try {\r\n            setState({ ...state, loading: true })\r\n\r\n            const { firstName, lastName, email, phone, country } = state.user\r\n            const update = {\r\n                firstName: state.firstName,\r\n                lastName: state.lastName,\r\n                email: state.email,\r\n                phone: state.phone,\r\n                country: state.country,\r\n            }\r\n            if (JSON.stringify({ firstName, lastName, email, phone, country }) === JSON.stringify(update)) {\r\n                throw new Error(\"No change made!\")\r\n            }\r\n\r\n            const user = await User.updateUser(ctx, userProp.id, update)\r\n            setState({ ...state, user: { ...state.user, ...update }, showEdit: false, loading: false })\r\n            addToast('Successfully updated user!', {\r\n                appearance: 'success',\r\n            })\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to update user!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n    const onDelete = useCallback(async () => {\r\n        try {\r\n            setState({ ...state, loading: true })\r\n\r\n            const confirmDelete = window.confirm('Are you sure you want to delete this user?')\r\n\r\n            if (!confirmDelete) {\r\n                setState({ ...state, loading: false })\r\n                return\r\n            }\r\n\r\n            const user = await User.deleteUser(ctx, userProp.id)\r\n            setState({ ...state, loading: false })\r\n            addToast('Successfully deleted user!', {\r\n                appearance: 'success',\r\n            })\r\n            onCancel()\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to delete user!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n\r\n    const user = state.user\r\n\r\n    if (!user) {\r\n        return <EmptyComponent message='No user selected!' icon={<FaUserAltSlash />} />\r\n    }\r\n\r\n    const createdAt = moment(user.createdAt)\r\n\r\n    return (\r\n        <div className='card has-radius'>\r\n            <div className='card-content'>\r\n                <figure className='image mb-4 is-128x128' style={{ margin: 'auto' }}>\r\n                    <img className='is-rounded' style={{ height: '100%' }} src={user.profileImageURL} />\r\n                </figure>\r\n                {state.showEdit ? (\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className='my-6'>\r\n                            <div className='field is-horizontal'>\r\n                                <div className='field-body'>\r\n                                    <div className='field'>\r\n                                        <div className='control has-icons-left'>\r\n                                            <input disabled={state.loading} required className='input' onChange={onFirstNameChange} value={state.firstName} type='text' placeholder='enter firstname...' />\r\n                                            <span className='icon is-small is-left'>\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='field'>\r\n                                        <div className='control has-icons-left'>\r\n                                            <input disabled={state.loading} required className='input' onChange={onLastNameChange} value={state.lastName} type='text' placeholder='enter lastname...' />\r\n                                            <span className='icon is-small is-left'>\r\n                                                <FaUser />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field is-horizontal'>\r\n                                <div className='field-body'>\r\n                                    <div className='field'>\r\n                                        <div className='control has-icons-left'>\r\n                                            <input disabled={state.loading} required className='input' onChange={onEmailChange} value={state.email} type='mail' placeholder='enter email...' />\r\n                                            <span className='icon is-small is-left'>\r\n                                                <FaEnvelope />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='field'>\r\n                                        <div className='control has-icons-left'>\r\n                                            <input disabled={state.loading} required className='input' onChange={onPhoneChange} value={state.phone} type='tel' placeholder='enter phone number...' />\r\n                                            <span className='icon is-small is-left'>\r\n                                                <FaPhoneAlt />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='field'>\r\n                                <div className='control has-icons-left'>\r\n                                    <input disabled={state.loading} required className='input' onChange={onCountryChange} value={state.country} type='text' placeholder='enter country...' />\r\n                                    <span className='icon is-small is-left'>\r\n                                        <FaGlobe />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='field is-grouped is-grouped-centered'>\r\n                            <div className='control'>\r\n                                <button onClick={() => setState({ ...state, showEdit: false })} disabled={state.loading} type='reset' className={`button mt-4 is-dark is-outlined is-rounded is-uppercase`}><FaChevronLeft />&nbsp; Cancel</button>\r\n                            </div>\r\n                            <div className='control'>\r\n                                <button disabled={state.loading} type='submit' className={`button mt-4 is-success is-rounded is-uppercase ${state.loading ? 'is-loading' : ''}`}><FaCheck />&nbsp; Save Changes</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                ) : (\r\n                        <>\r\n                            <div className='mb-6 block'>\r\n                            <p className='is-capitalized has-text-grey-light has-text-centered'><FaClock />&nbsp; Created {createdAt.fromNow()}</p>\r\n                                <div className='columns mt-4 is-multiline'>\r\n                                    <p className='is-capitalized column is-6'><FaUserCircle />&nbsp; {`${user.firstName} ${user.lastName}`}</p>\r\n                                    <p className='is-lowercase column is-6'><FaEnvelope />&nbsp; {user.email}</p>\r\n\r\n                                    <p className='is-capitalized column is-6'><FaPhoneAlt />&nbsp; {user.phone}</p>\r\n                                    <p className='is-capitalized column is-6'><FaGlobe />&nbsp; {user.country}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='field is-grouped is-grouped-centered'>\r\n                                <div className='control'>\r\n                                    <button onClick={onCancel} disabled={state.loading} type='button' className={`button mt-4 is-dark is-outlined is-rounded is-uppercase`}><FaChevronLeft />&nbsp; Back</button>\r\n                                </div>\r\n                                <div className='control'>\r\n                                    <button onClick={onDelete} disabled={state.loading} type='button' className={`button mt-4 is-danger is-rounded is-uppercase ${state.loading ? 'is-loading' : ''}`}><FaTrash />&nbsp; Delete</button>\r\n                                </div>\r\n                                <div className='control'>\r\n                                    <button onClick={() => setState({ ...state, showEdit: true })} disabled={state.loading} type='button' className={`button mt-4 is-success is-rounded is-uppercase`}><FaPencilAlt />&nbsp; Edit</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { BodyFragment } from '../components/body';\r\nimport Map from \"../components/map\";\r\nimport { MOCK_DATA, APPLICATION_CONTEXT } from '../lib';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { Modal } from '../components/modal';\r\nimport { FaRegUserCircle, FaUserLock } from 'react-icons/fa';\r\nimport { AddAdmin, EmptyComponent } from '../components/misc';\r\nimport { Stat } from '../lib/stat';\r\nimport { User, USERS_PAGE_LIMIT } from '../lib/user';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { UserDetails } from '../components/users';\r\n\r\nconst numberFormatter = Intl.NumberFormat()\r\n\r\nfunction Item({ user, onClick }: { user: User, onClick?: any }) {\r\n    return (\r\n        <div onClick={onClick} className='column is-3-widescreen is-4-desktop is-12-mobile is-6-tablet'>\r\n            <div className='card is-hoverable-card'>\r\n                <div className='card-content'>\r\n                    <figure className='image mb-4 is-96x96' style={{ margin: 'auto' }}>\r\n                        <img className='is-rounded' style={{ height: '100%' }} src={user.profileImageURL} />\r\n                    </figure>\r\n                    <div className='block'>\r\n                        <p style={{ textOverflow: 'ellipsis', whiteSpace: 'nowrap' }} className='is-clipped is-size-6 has-text-weight-bold is-capitalized'>{`${user.firstName} ${user.lastName}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Users() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState<any>({\r\n        loadingMore: false,\r\n        users: new Array<User>(),\r\n        selectedUser: undefined\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const onLoadMore = useCallback(async () => {\r\n        try {\r\n            setState({ ...state, loadingMore: true })\r\n            const users = await User.getAllUsers(ctx, Math.max(2, Math.ceil(state.users.length / USERS_PAGE_LIMIT) + 1))\r\n            if (users.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, users: [...state.users, ...users] })\r\n        } catch (e) {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: true })\r\n\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        setState({ ...state, loadingMore: true })\r\n        const users = User.getAllUsers(ctx).then((users) => {\r\n            if (users.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, users })\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: true })\r\n\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <BodyFragment>\r\n            <div className='container is-fluid mb-6'>\r\n                <div className='section my-4'>\r\n                    <div className='columns is-multiline is-vcentered is-flex-centered'>\r\n                        {state.users.map(item => <Item key={item.id} onClick={() => {\r\n                            setState((state) => ({ ...state, selectedUser: item }))\r\n                        }} user={item} />)}\r\n                    </div>\r\n                </div>\r\n                <div onClick={onLoadMore} className={`button is-size-7 px-5 is-uppercase is-rounded is-dark ${state.loadingMore ? 'is-loading' : ''}`}>Load More</div>\r\n            </div>\r\n            {state.selectedUser ? (\r\n                <Modal active={true} onDismiss={() => setState({ ...state, selectedUser: undefined })}>\r\n                    <UserDetails onCancel={() => setState({ ...state, selectedUser: undefined })} user={state.selectedUser} />\r\n                </Modal>\r\n            ) : null}\r\n        </BodyFragment>\r\n    )\r\n}\r\n\r\n","import { Application } from \".\"\r\nimport { User } from \"./user\";\r\n\r\nexport const POSTS_PAGE_LIMIT = 20\r\nexport const POST_REPORTS_PAGE_LIMIT = 200\r\n\r\nexport function computeCount(v: number) {\r\n    const suffices = 'KMBT'\r\n    var base = Math.floor(Math.log(Math.abs(v)) / Math.log(1000));\r\n    var suffix = suffices[Math.min(3, base - 1)];\r\n    base = suffices.indexOf(suffix) + 1;\r\n    if (suffix) {\r\n        const precision = Math.pow(10, 2)\r\n        return Math.round((v / Math.pow(1000, base)) * precision) / precision + suffix\r\n    } else {\r\n        return v;\r\n    }\r\n}\r\n\r\nexport interface IReport {\r\n    id\r\n    postID\r\n    content\r\n    person: {\r\n        firstName,\r\n        lastName,\r\n        profileImageURL,\r\n        id\r\n    }\r\n}\r\n\r\nexport class Post {\r\n    id\r\n    title\r\n    mediaURL\r\n    thumbnailURL\r\n    viewCount = 0\r\n    // 'image' | 'video'\r\n    type\r\n    uploadTime\r\n    owner\r\n    like: number = 0\r\n    dislike: number = 0\r\n    reportsCount = 0\r\n\r\n    static async getAllPosts(app: Application, page = 1, pageLimit = POSTS_PAGE_LIMIT): Promise<Post[]> {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/posts/posts?pageNo=${page}&pageLimit=${pageLimit}`, {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async updatePost(app: Application, postID: string, title): Promise<Post> {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/posts/posts/${postID}`, {\r\n                method: 'PATCH',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ title })\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async getReports(app: Application, postID, page = 1, pageLimit = POST_REPORTS_PAGE_LIMIT): Promise<IReport[]> {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/posts/posts/${postID}/flag?pageNo=${page}&pageLimit=${pageLimit}`, {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    static async deletePost(app: Application, postID: string) {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/admin/posts/posts/${postID}`, {\r\n                method: 'DELETE',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'x-access-token': `${app.user?.token}`,\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json()).error)\r\n            }\r\n\r\n            return await response.json()\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}","import { strictEqual } from \"assert\";\r\nimport moment from \"moment\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport { FaCheck, FaChevronLeft, FaClock, FaEdit, FaEnvelope, FaExclamationCircle, FaExclamationTriangle, FaEye, FaFlag, FaFontAwesomeFlag, FaGlobe, FaPencilAlt, FaPhoneAlt, FaPhoneSquareAlt, FaPlusCircle, FaSadCry, FaSadTear, FaThumbsDown, FaThumbsUp, FaTrash, FaUser, FaUserAltSlash, FaUserCircle, FaUserSlash } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { APPLICATION_CONTEXT } from \"../lib\";\r\nimport { Post, computeCount } from \"../lib/post\";\r\nimport { User } from \"../lib/user\";\r\nimport { links } from \"../lib/util\";\r\nimport { EmptyComponent } from \"./misc\";\r\n\r\nexport function PostDetails({ post: postProp, onCancel }: { post: Post, onCancel: any }) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        post: postProp,\r\n        title: postProp.title,\r\n        loading: false,\r\n        showEdit: false,\r\n    })\r\n    const [warning, setWarning] = useState({ show: false })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const onTitleChange = useCallback((e) => {\r\n        setState({ ...state, title: e.target.value })\r\n    }, [state])\r\n\r\n    const onSubmitUpdate = useCallback(async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        try {\r\n            setState({ ...state, loading: true })\r\n\r\n            if (state.title === state.post.title) {\r\n                throw new Error(\"No change made!\")\r\n            }\r\n\r\n            const updated = await Post.updatePost(ctx, postProp.id, state.title)\r\n            setState({ ...state, post: { ...state.post, title: updated.title }, showEdit: false, loading: false })\r\n            addToast('Successfully updated post!', {\r\n                appearance: 'success',\r\n            })\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to update post!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    const onDelete = useCallback(async () => {\r\n        try {\r\n            setState({ ...state, loading: true })\r\n\r\n            const confirmDelete = window.confirm('Are you sure you want to delete this post?')\r\n\r\n            if (!confirmDelete) {\r\n                setState({ ...state, loading: false })\r\n                return\r\n            }\r\n\r\n            await Post.deletePost(ctx, postProp.id)\r\n            setState({ ...state, loading: false })\r\n            addToast('Successfully deleted post!', {\r\n                appearance: 'success',\r\n            })\r\n            onCancel()\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to delete post!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    const onWarnUser = useCallback(async (message) => {\r\n        try {\r\n            setState({ ...state, loading: true })\r\n\r\n            if (message.length < 24) {\r\n                throw new Error('Provide a meaningful message more than 24 characters!')\r\n            }\r\n\r\n            const confirm = window.confirm('Send a warning to this user about the content of this reported post?')\r\n\r\n            if (!confirm) {\r\n                setState({ ...state, loading: false })\r\n                return\r\n            }\r\n\r\n            await User.warnUser(ctx, postProp.owner.id, message, postProp.id)\r\n            setState({ ...state, loading: false })\r\n            setWarning({ show: false })\r\n            addToast('Successfully sent warning to user!', {\r\n                appearance: 'success',\r\n            })\r\n        } catch (e) {\r\n            setState({ ...state, loading: false })\r\n            addToast(e.message || 'Failed to warn user!', {\r\n                appearance: 'error',\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n\r\n    const post: Post = state.post\r\n\r\n    if (!post) {\r\n        return <EmptyComponent message='No Post Selected!' icon={<FaSadTear />} />\r\n    }\r\n\r\n    const createdAt = moment.unix(post.uploadTime / 1000)\r\n\r\n    return (\r\n        <div className='card has-radius'>\r\n            {!warning.show ? (\r\n                <div className='card-content'>\r\n                    <figure className='image' style={{ margin: 'auto' }}>\r\n                        {post.type === 'image' ? (\r\n                            <img style={{ height: '100%' }} src={post.mediaURL} />\r\n                        ) : (\r\n                                <video controls src={post.mediaURL} />\r\n                            )}\r\n                    </figure>\r\n                    {state.showEdit ? (\r\n                        <form onSubmit={onSubmitUpdate}>\r\n                            <div className='field'>\r\n                                <p className='help block has-text-weight-bold is-size-6 is-uppercase'>Edit Post Title</p>\r\n                                <div className='control has-icons-left'>\r\n                                    <input disabled={state.loading} required className='input' onChange={onTitleChange} value={state.title} type='text' placeholder='enter title...' />\r\n                                    <span className='icon is-small is-left'>\r\n                                        <FaEdit />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='field is-grouped is-grouped-centered'>\r\n                                <div className='control'>\r\n                                    <button onClick={() => setState({ ...state, showEdit: false })} disabled={state.loading} type='reset' className={`button mt-4 is-dark is-outlined is-rounded is-uppercase`}><FaChevronLeft />&nbsp; Cancel</button>\r\n                                </div>\r\n                                <div className='control'>\r\n                                    <button disabled={state.loading} type='submit' className={`button mt-4 is-success is-rounded is-uppercase ${state.loading ? 'is-loading' : ''}`}><FaCheck />&nbsp; Save Changes</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    ) : (\r\n                            <div>\r\n                                <p style={{ textOverflow: 'ellipsis' }} className='block is-clipped is-size-5 has-text-centered has-text-weight-bold is-capitalized'>{post.title}</p>\r\n                                <p style={{ justifyContent: 'space-between' }} className='is-capitalized is-flex block has-text-grey-light has-text-centered'>\r\n                                    <span>\r\n                                        <FaClock />&nbsp; Created {createdAt.fromNow()}\r\n                                    </span>\r\n                                    <span>\r\n                                        <FaFontAwesomeFlag />&nbsp; {computeCount(post.reportsCount)} {post.reportsCount > 1 ? 'reports' : 'report'}\r\n                                    </span>\r\n                                </p>\r\n                                <div className='is-flex-centered'>\r\n                                    <div className='field has-addons has-addons-centered'>\r\n                                        <div className='control'>\r\n                                            <Link to={`${links._reports}${postProp.id}`} target='_blank' type='button' className={`button is-small is-rounded is-uppercase`}>View Flags</Link>\r\n                                        </div>\r\n                                        <div className='control'>\r\n                                            <button onClick={() => setWarning({ ...state, show: true })} disabled={state.loading} type='button' className={`button is-small is-warning is-inverted is-rounded is-uppercase`}>Warn Account</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='columns is-vcentered is-mobile'>\r\n                                    <div className='column is-narrow'>\r\n                                        <figure className='image is-48x48' style={{ margin: 'auto' }}>\r\n                                            <img className='is-rounded' style={{ height: '100%' }} src={post.owner.profileImageURL} />\r\n                                        </figure>\r\n                                    </div>\r\n                                    <div className='column pl-0'>\r\n                                        <p style={{ textOverflow: 'ellipsis' }} className='is-clipped is-size-6 has-text-left is-capitalized'>{`${post.owner.firstName} ${post.owner.lastName}`}</p>\r\n                                    </div>\r\n                                    <div className='column is-narrow field has-addons has-addons-right'>\r\n                                        <p className='is-capitalized mx-2'><FaThumbsUp /> {computeCount(post.like)}</p>\r\n                                        <p className='is-capitalized mx-2'><FaThumbsDown /> {computeCount(post.dislike)}</p>\r\n                                        {post.type === 'video' ? <p className='is-capitalized mx-2'><FaEye /> {computeCount(post.viewCount)}</p> : null}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='field is-grouped is-grouped-centered'>\r\n                                    <div className='control'>\r\n                                        <button onClick={onCancel} disabled={state.loading} type='button' className={`button mt-4 is-dark is-outlined is-rounded is-uppercase`}><FaChevronLeft />&nbsp; Back</button>\r\n                                    </div>\r\n                                    <div className='control'>\r\n                                        <button onClick={onDelete} disabled={state.loading} type='button' className={`button mt-4 is-danger is-rounded is-uppercase ${state.loading ? 'is-loading' : ''}`}><FaTrash />&nbsp; Delete</button>\r\n                                    </div>\r\n                                    <div className='control'>\r\n                                        <button onClick={() => setState({ ...state, showEdit: true })} disabled={state.loading} type='button' className={`button mt-4 is-success is-rounded is-uppercase`}><FaPencilAlt />&nbsp; Edit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            ) : (\r\n                    <div className='card-content'>\r\n                        <Warning onBack={() => setWarning({ ...warning, show: false })} onSubmit={onWarnUser} loading={state.loading} />\r\n                    </div>\r\n                )}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nconst Warning = ({ onSubmit, onBack, loading }) => {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [message, setMessage] = useState(`This post violates the community guidelines of Karry!`)\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n\r\n            onSubmit(message.trim())\r\n        }}>\r\n            <FaExclamationCircle className='is-size-1 has-text-danger' />\r\n\r\n            <div className='field'>\r\n                <p className='help block has-text-weight-bold is-size-6 is-uppercase'>Send warning message</p>\r\n                <div className='control has-icons-left'>\r\n                    <textarea disabled={loading} required minLength={24} rows={4} className='textarea' onChange={(e) => setMessage(e.target.value)} value={message} placeholder='Set message to display to user about this warning...' />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='field is-grouped is-grouped-centered'>\r\n                <div className='control'>\r\n                    <button onClick={onBack} disabled={loading} type='reset' className={`button mt-4 is-dark is-outlined is-rounded is-uppercase`}><FaChevronLeft />&nbsp; Cancel</button>\r\n                </div>\r\n                <div className='control'>\r\n                    <button disabled={loading} type='submit' className={`button mt-4 is-success is-rounded is-uppercase ${loading ? 'is-loading' : ''}`}><FaCheck />&nbsp; Send Warning</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Reports = ({ post }: { post: Post }) => {\r\n    return (\r\n        <></>\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { BodyFragment } from '../components/body';\r\nimport Map from \"../components/map\";\r\nimport { MOCK_DATA, APPLICATION_CONTEXT } from '../lib';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { Modal } from '../components/modal';\r\nimport { FaEye, FaRegUserCircle, FaThumbsUp, FaUserLock } from 'react-icons/fa';\r\nimport { AddAdmin, EmptyComponent } from '../components/misc';\r\nimport { Stat } from '../lib/stat';\r\nimport { User, USERS_PAGE_LIMIT } from '../lib/user';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { UserDetails } from '../components/users';\r\nimport { Post, POSTS_PAGE_LIMIT, computeCount } from '../lib/post';\r\nimport { PostDetails } from '../components/post';\r\n\r\nconst numberFormatter = Intl.NumberFormat()\r\n\r\nfunction Item({ post, onClick }: { post: Post, onClick?: any }) {\r\n    const user = post.owner\r\n\r\n    return (\r\n        <div onClick={onClick} className='column is-3-widescreen is-4-desktop is-12-mobile is-6-tablet'>\r\n            <div className='card is-hoverable-card'>\r\n                <div className='card-content is-paddingless'>\r\n                    <figure className='image is-4by3' style={{ margin: 'auto' }}>\r\n                        <img src={post.thumbnailURL} />\r\n                    </figure>\r\n                    <div className='px-2 py-2'>\r\n                        <p style={{ textOverflow: 'ellipsis', whiteSpace: 'nowrap' }} className='block is-clipped is-size-5 has-text-centered has-text-weight-bold is-capitalized'>{post.title}</p>\r\n                        <div className='columns is-vcentered is-mobile'>\r\n                            <div className='column is-narrow'>\r\n                                <figure className='image is-32x32' style={{ margin: 'auto' }}>\r\n                                    <img className='is-rounded' style={{ height: '100%' }} src={user.profileImageURL} />\r\n                                </figure>\r\n                            </div>\r\n                            <div className='column pl-0'>\r\n                                <p style={{ textOverflow: 'ellipsis' }} className='is-clipped is-size-6 has-text-left is-capitalized'>{`${user.firstName} ${user.lastName}`}</p>\r\n                            </div>\r\n                            <div className='column pl-0 is-narrow'>\r\n                                {post.type === 'image' ? (\r\n                                    <p className='is-capitalized'><FaThumbsUp /> {computeCount(post.like)}</p>\r\n                                ) : (\r\n                                        <p className='is-capitalized'><FaEye /> {computeCount(post.viewCount)}</p>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Posts() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState<any>({\r\n        loadingMore: false,\r\n        posts: new Array<User>(),\r\n        selectedPost: undefined\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n    const onLoadMore = useCallback(async () => {\r\n        try {\r\n            setState({ ...state, loadingMore: true })\r\n            const posts = await Post.getAllPosts(ctx, Math.max(2, Math.ceil(state.posts.length / POSTS_PAGE_LIMIT) + 1))\r\n            if (posts.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, posts: [...state.posts, ...posts] })\r\n        } catch (e) {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: false })\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        setState({ ...state, loadingMore: true })\r\n        const users = Post.getAllPosts(ctx).then((posts) => {\r\n            if (posts.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, posts })\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: false })\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <BodyFragment>\r\n            <div className='container is-fluid mb-6'>\r\n                <div className='section my-4'>\r\n                    <div className='columns is-multiline is-vcentered is-flex-centered'>\r\n                        {state.posts.map(item => <Item key={item.id} onClick={() => {\r\n                            setState((state) => ({ ...state, selectedPost: item }))\r\n                        }} post={item} />)}\r\n                    </div>\r\n                </div>\r\n                <div onClick={onLoadMore} className={`button is-size-7 px-5 is-uppercase is-rounded is-dark ${state.loadingMore ? 'is-loading' : ''}`}>Load More</div>\r\n            </div>\r\n            {state.selectedPost ? (\r\n                <Modal active={true} onDismiss={() => setState({ ...state, selectedPost: undefined })}>\r\n                    <PostDetails onCancel={() => setState({ ...state, selectedPost: undefined })} post={state.selectedPost} />\r\n                </Modal>\r\n            ) : null}\r\n        </BodyFragment>\r\n    )\r\n}\r\n\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { BodyFragment } from '../components/body';\r\nimport Map from \"../components/map\";\r\nimport { MOCK_DATA, APPLICATION_CONTEXT } from '../lib';\r\nimport { MdAddCircle } from 'react-icons/md';\r\nimport { Modal } from '../components/modal';\r\nimport { FaRegUserCircle, FaUserLock } from 'react-icons/fa';\r\nimport { AddAdmin, EmptyComponent } from '../components/misc';\r\nimport { Stat } from '../lib/stat';\r\nimport { User, USERS_PAGE_LIMIT } from '../lib/user';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { UserDetails } from '../components/users';\r\nimport { IReport, Post } from '../lib/post';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst numberFormatter = Intl.NumberFormat()\r\n\r\nfunction Item({ report }: { report: IReport }) {\r\n    return (\r\n        <div className='column is-10 is-offset-1 is-12-mobile mx-6'>\r\n            <div className='card'>\r\n                <div className='card-content'>\r\n                    <div className='px-2 py-2 columns is-vcentered'>\r\n                        <div className='column is-narrow is-12-mobile'>\r\n                            <div className='columns is-vcentered is-mobile'>\r\n                                <div className='column is-narrow'>\r\n                                    <figure className='image is-32x32' style={{ margin: 'auto' }}>\r\n                                        <img className='is-rounded' style={{ height: '100%' }} src={report.person.profileImageURL} />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='column pl-0'>\r\n                                    <p style={{ textOverflow: 'ellipsis' }} className='is-clipped has-text-left has-text-centered-mobile is-capitalized'>{`${report.person.firstName} ${report.person.lastName}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='column is-expanded is-12-mobile'>\r\n                            <p className='is-clipped is-size-6 has-text-weight-bold'>{report.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Reports() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        loadingMore: false,\r\n        reports: new Array<IReport>(),\r\n    })\r\n    const { addToast } = useToasts()\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const onLoadMore = useCallback(async () => {\r\n        try {\r\n            setState({ ...state, loadingMore: true })\r\n            const reports = await Post.getReports(ctx, id, Math.max(2, Math.ceil(state.reports.length / USERS_PAGE_LIMIT) + 1))\r\n            if (reports.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, reports: [...state.reports, ...reports] })\r\n        } catch (e) {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: true })\r\n\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        setState({ ...state, loadingMore: true })\r\n\r\n        Post.getReports(ctx, id).then((reports) => {\r\n            if (reports.length < 1) {\r\n                addToast(\"No new data to fetch!\", {\r\n                    appearance: 'info'\r\n                })\r\n                return setState({ ...state, loadingMore: false })\r\n            }\r\n            setState({ ...state, loadingMore: false, reports })\r\n        }).catch(e => {\r\n            console.log(e)\r\n            setState({ ...state, loadingMore: true })\r\n\r\n            addToast(\"Failed to load new data!\", {\r\n                appearance: 'error'\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    if (!id) {\r\n        return (\r\n            <BodyFragment loading={false}>\r\n                <div className='container is-fluid is-fullheight is-flex-centered'>\r\n                    <EmptyComponent message=\"Post not found\" shadow={false} />\r\n                </div>\r\n            </BodyFragment>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <BodyFragment>\r\n            <div className='container is-fluid mb-6'>\r\n                <div className='section my-4'>\r\n                    <div className='columns is-multiline is-vcentered is-flex-centered'>\r\n                        {state.reports.map(item => <Item key={item.id} report={item} />)}\r\n                    </div>\r\n                </div>\r\n                <div onClick={onLoadMore} className={`button is-size-7 px-5 is-uppercase is-rounded is-dark ${state.loadingMore ? 'is-loading' : ''}`}>Load More</div>\r\n            </div>\r\n        </BodyFragment>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport RouteView, { RouteList } from '../view/route'\r\nimport LoadingIcon from \"../loading_icon.gif\";\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\";\r\nimport { links } from \"../lib/util\";\r\nimport { Logout } from './logout'\r\nimport { Login } from \"../view/login\";\r\nimport { Register } from \"../view/register\";\r\nimport { AuthGuard } from \"./guard\";\r\nimport { Dashboard } from \"../view/dashboard\";\r\nimport { Users } from \"../view/users\";\r\nimport { Posts } from \"../view/posts\";\r\nimport { EmptyComponent } from \"./misc\";\r\nimport { Reports } from \"../view/reports\";\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='is-flex-centered' style={{ height: '100%', filter: 'grayscale(1)' }}>\r\n            <figure className='image is-128x128'>\r\n                <img src={LoadingIcon} />\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const BodyFragment = ({ loading, children }: { loading?: boolean, children?: any }) => {\r\n    return (\r\n        <div className='App-Body'>\r\n            {loading ? <Loading /> : <>{children}</>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Body = ({ showLoading }: { showLoading?: boolean }) => {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    // showLoading = showLoading\r\n    if (showLoading) { return <BodyFragment loading /> }\r\n    else {\r\n        return (\r\n            <Switch>\r\n                <Route path={links.login} exact>\r\n                    <Login />\r\n                </Route>\r\n                <Route path={links.register} exact>\r\n                    <Register />\r\n                </Route>\r\n\r\n                <Route path={links.logout} exact>\r\n                    <Logout />\r\n                </Route>\r\n\r\n                <AuthGuard path={links.dashboard}>\r\n                    <Dashboard />\r\n                </AuthGuard>\r\n                <AuthGuard path={links.users} exact>\r\n                    <Users />\r\n                </AuthGuard>\r\n                <AuthGuard path={links.posts} exact>\r\n                    <Posts />\r\n                </AuthGuard>\r\n                <AuthGuard path={links.reports}>\r\n                    <Reports />\r\n                </AuthGuard>\r\n\r\n                <Route path={links.root} exact>\r\n                    {viewCTX.signedIn ?\r\n                        (\r\n                            <Redirect to={links.dashboard} />\r\n                        ) :\r\n                        (\r\n                            <Redirect to={links.login} />\r\n                        )}\r\n                </Route>\r\n\r\n\r\n                <AuthGuard >\r\n                    <BodyFragment loading={showLoading}>\r\n                        <div className='container is-fluid is-fullheight is-flex-centered'>\r\n                            <EmptyComponent message=\"Page not found\" shadow={false} />\r\n                        </div>\r\n                    </BodyFragment>\r\n                </AuthGuard>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { useContext, useState, createContext, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION, VIEW_CONTEXT } from './lib';\r\nimport Toolbar from \"./components/toolbar\";\r\nimport { Body } from './components/body';\r\nimport { User } from './lib/user';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\n\r\nconst AUTO_HIDE_TOAST_TIMEOUT = 4000;\r\n\r\ninterface AppState {\r\n  ready: boolean,\r\n  loading: boolean\r\n}\r\n/**\r\n * This is the main entry to the web application.\r\n */\r\nfunction App() {\r\n  const [state, setState] = useState<AppState>({\r\n    ready: false,\r\n    loading: false\r\n  })\r\n  const [signedIn, setSignedInUser] = useState<User | undefined>(undefined)\r\n\r\n  const viewContext = {\r\n    setSignedInUser,\r\n    signedIn,\r\n    setLoading: (loading) => setState({ ...state, loading })\r\n  }\r\n\r\n  useEffect(() => {\r\n    DEFAULT_APPLICATION.ready.then(() => {\r\n      if (DEFAULT_APPLICATION.signedIn()) {\r\n        setSignedInUser(DEFAULT_APPLICATION.user)\r\n      } else {\r\n        setSignedInUser(undefined)\r\n      }\r\n      setState({ ...state, ready: true })\r\n    }).finally(() => {\r\n      DEFAULT_APPLICATION.logoutListener = () => viewContext.setSignedInUser(undefined)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <ToastProvider autoDismiss autoDismissTimeout={AUTO_HIDE_TOAST_TIMEOUT} placement='top-center'>\r\n      <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\r\n        <VIEW_CONTEXT.Provider value={viewContext}>\r\n          <Toolbar hidden={!state.ready} />\r\n          <Body showLoading={!state.ready || state.loading} />\r\n        </VIEW_CONTEXT.Provider>\r\n      </APPLICATION_CONTEXT.Provider>\r\n    </ToastProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie9\";\r\nimport 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/karry-adminui'>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}